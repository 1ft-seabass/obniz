./src/obniz//ObnizApp.ts:export default class ObnizApp {
./src/obniz//ObnizApi.ts:export default class ObnizApi {
./src/obniz//ObnizPartsInterface.ts:export interface ObnizPartsInfo {
./src/obniz//ObnizPartsInterface.ts:export default abstract class ObnizPartsInterface {
./src/obniz//libs/hw/m5stickc.ts:export class M5StickC extends ObnizDevice {
./src/obniz//libs/hw/m5stack_basic.ts:export class M5StackBasic extends ObnizDevice {
./src/obniz//libs/hw/obnizBoard.ts:export default ObnizBoard;
./src/obniz//libs/io_peripherals/spi.ts:export default class PeripheralSPI extends ComponentAbstract {
./src/obniz//libs/io_peripherals/ad.ts:export default class PeripheralAD extends ComponentAbstract {
./src/obniz//libs/io_peripherals/directive.ts:export interface DirectiveAnimationFrame {
./src/obniz//libs/io_peripherals/directive.ts:export default class Directive extends ComponentAbstract {
./src/obniz//libs/io_peripherals/uart.ts:export interface PeripheralUARTOptions {
./src/obniz//libs/io_peripherals/uart.ts:export default class PeripheralUART extends ComponentAbstract {
./src/obniz//libs/io_peripherals/io.ts:export default class PeripheralIO extends ComponentAbstract {
./src/obniz//libs/io_peripherals/i2c.ts:export default PeripheralI2C;
./src/obniz//libs/io_peripherals/pwm.ts:export interface PWMInterface {
./src/obniz//libs/io_peripherals/pwm.ts:export default class PeripheralPWM extends ComponentAbstract implements PWMInterface {
./src/obniz//libs/io_peripherals/grove.ts:export interface PeripheralGroveParams {
./src/obniz//libs/io_peripherals/grove.ts:export default class PeripheralGrove extends ComponentAbstract {
./src/obniz//libs/network/wifi.ts:export default class WiFi {
./src/obniz//libs/plugin/plugin.ts:export default class Plugin {
./src/obniz//libs/protocol/tcp.ts:export default class Tcp extends ComponentAbstract {
./src/obniz//libs/embeds/bleHci/bleAttributeAbstract.ts:export default abstract class BleAttributeAbstract<ParentClass, ChildrenClass> {
./src/obniz//libs/embeds/bleHci/blePeripheral.ts:export interface BleConnectionUpdateParam {
./src/obniz//libs/embeds/bleHci/blePeripheral.ts:export default class BlePeripheral {
./src/obniz//libs/embeds/bleHci/bleRemoteValueAttributeAbstract.ts:export default abstract class BleRemoteValueAttributeAbstract<
./src/obniz//libs/embeds/bleHci/bleRemoteCharacteristic.ts:export default class BleRemoteCharacteristic extends BleRemoteValueAttributeAbstract<
./src/obniz//libs/embeds/bleHci/bleAdvertisementBuilder.ts:export default class BleAdvertisementBuilder {
./src/obniz//libs/embeds/bleHci/bleAdvertisement.ts:export default class BleAdvertisement {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BleScanResponseData {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BleAdvertisementData extends BleScanResponseData {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BleDescriptorDefine {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BleCharacteristicDefine {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BleServiceDefine {
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export interface BlePeripheralDefine {}
./src/obniz//libs/embeds/bleHci/bleRemoteDescriptor.ts:export default class BleRemoteDescriptor extends BleRemoteValueAttributeAbstract<BleRemoteCharacteristic, null> {
./src/obniz//libs/embeds/bleHci/bleCharacteristic.ts:export default class BleCharacteristic extends BleLocalValueAttributeAbstract<BleService, BleDescriptor> {
./src/obniz//libs/embeds/bleHci/bleRemotePeripheral.ts:export interface IBeacon {
./src/obniz//libs/embeds/bleHci/bleRemotePeripheral.ts:export interface BleConnectSetting {
./src/obniz//libs/embeds/bleHci/bleRemotePeripheral.ts:export interface BlePairingOptions extends SmpEncryptOptions {
./src/obniz//libs/embeds/bleHci/bleRemotePeripheral.ts:export default class BleRemotePeripheral {
./src/obniz//libs/embeds/bleHci/bleRemoteAttributeAbstract.ts:export default abstract class BleRemoteAttributeAbstract<ParentClass, ChildrenClass> extends BleAttributeAbstract<
./src/obniz//libs/embeds/bleHci/bleLocalValueAttributeAbstract.ts:export default class BleLocalValueAttributeAbstract<ParentClass, ChildrenClass> extends BleLocalAttributeAbstract<
./src/obniz//libs/embeds/bleHci/bleDescriptor.ts:export default class BleDescriptor extends BleLocalValueAttributeAbstract<BleCharacteristic, null> {
./src/obniz//libs/embeds/bleHci/ble.ts:export default class ObnizBLE extends ComponentAbstract {
./src/obniz//libs/embeds/bleHci/bleScan.ts:export interface BleScanTarget {
./src/obniz//libs/embeds/bleHci/bleScan.ts:export interface BleScanAdvertisementFilterParam {
./src/obniz//libs/embeds/bleHci/bleScan.ts:export interface BleScanSetting {
./src/obniz//libs/embeds/bleHci/bleScan.ts:export default class BleScan {
./src/obniz//libs/embeds/bleHci/bleRemoteService.ts:export default class BleRemoteService extends BleRemoteAttributeAbstract<BleRemotePeripheral, BleRemoteCharacteristic> {
./src/obniz//libs/embeds/bleHci/bleService.ts:export default class BleService extends BleLocalAttributeAbstract<null, BleCharacteristic> {
./src/obniz//libs/embeds/bleHci/bleLocalAttributeAbstract.ts:export default class BleLocalAttributeAbstract<ParentClass, ChildrenClass> extends BleAttributeAbstract<
./src/obniz//libs/embeds/bleHci/hci.ts:export default class ObnizBLEHci {
./src/obniz//libs/embeds/switch.ts:export default class ObnizSwitch extends ComponentAbstract {
./src/obniz//libs/embeds/display.ts:export default class Display extends ComponentAbstract {
./src/obniz//libs/measurements/logicanalyzer.ts:export interface LogicAnalyzerOptions {
./src/obniz//libs/measurements/logicanalyzer.ts:export interface LogicAnalyzerOptionsExt extends LogicAnalyzerOptions {
./src/obniz//libs/measurements/logicanalyzer.ts:export default class LogicAnalyzer extends ComponentAbstract {
./src/obniz//libs/measurements/measure.ts:export interface ObnizMeasureResult {
./src/obniz//libs/measurements/measure.ts:export interface ObnizMeasureOptions {
./src/obniz//libs/measurements/measure.ts:export default class ObnizMeasure extends ComponentAbstract {
./src/obniz//ObnizError.ts:export class ObnizError extends Error {
./src/obniz//ObnizError.ts:export class ObnizOfflineError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizTimeoutError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizI2cError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizI2cWarning extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnknownPeripheralError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnknownServiceError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnknownCharacteristicError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnknownDescriptorError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleOpError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleHciStateError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleAttError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizDeprecatedFunctionError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnsupportedHciError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizParameterError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleUnSupportedOSVersionError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBlePairingRejectByRemoteError extends ObnizError {
./src/obniz//ObnizError.ts:export class ObnizBleScanStartError extends ObnizError {


./src/obniz//libs/io_peripherals/common.ts:export type DriveType = "5v" | "3v" | "open-drain";
./src/obniz//libs/io_peripherals/common.ts:export type PullType = "5v" | "3v" | "0v" | null;
./src/obniz//libs/io_peripherals/common.ts:export type AnimationStatus = "loop" | "registrate" | "pause" | "resume";
./src/obniz//libs/io_peripherals/common.ts:export type StopBitType = 1 | 1.5 | 2;
./src/obniz//libs/io_peripherals/common.ts:export type BitType = 5 | 6 | 7 | 8;
./src/obniz//libs/io_peripherals/common.ts:export type ParityType = "off" | "odd" | "even";
./src/obniz//libs/io_peripherals/common.ts:export type FlowControlType = "off" | "rts" | "cts" | "rts-cts";
./src/obniz//libs/io_peripherals/pwm.ts:export type PWMModulateType = "am";
./src/obniz//libs/io_peripherals/grove.ts:export type PeripheralGroveType = "digital" | "analog" | "analog-digital" | "i2c" | "uart" | "pwm";
./src/obniz//libs/io_peripherals/grove.ts:export type GrovePinOption = "default" | "secondaryOnly";
./src/obniz//libs/embeds/bleHci/blePeripheral.ts:export type BleConnectionState = "connected" | "disconnected";
./src/obniz//libs/embeds/bleHci/bleScan.ts:export type BleScanMode = "passive" | "active";
./src/obniz//libs/embeds/bleHci/bleScan.ts:export type BleBinary = number[];
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type UUID = string;
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleDeviceAddress = string;
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type Handle = number;
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleDeviceType = "ble" | "dumo" | "breder";
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleDeviceAddressType = "public" | "random" | "rpa_public" | "rpa_random";
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleEventType =
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleAttributePropery = "broadcast" | "notify" | "read" | "write" | "write_without_response" | "indicate";
./src/obniz//libs/embeds/bleHci/bleTypes.ts:export type BleAdvertisementFlag =
