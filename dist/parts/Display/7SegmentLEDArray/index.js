"use strict";
class _7SegmentLEDArray {
    constructor() {
        this.identifier = '' + new Date().getTime();
        this.keys = ['segments'];
        this.requiredKeys = this.keys;
    }
    static info() {
        return {
            name: '7SegmentLEDArray',
        };
    }
    wired(obniz) {
        this.obniz = obniz;
        this.segments = this.params.segments;
    }
    print(data) {
        if (typeof data === 'number') {
            data = parseInt(data);
            const print = index => {
                let val = data;
                for (let i = 0; i < this.segments.length; i++) {
                    if (index === i) {
                        this.segments[i].print(val % 10);
                    }
                    else {
                        this.segments[i].off();
                    }
                    val = val / 10;
                }
            };
            let animations = [];
            for (let i = 0; i < this.segments.length; i++) {
                animations.push({
                    duration: 3,
                    state: print,
                });
            }
            this.obniz.io.animation(this.identifier, 'loop', animations);
        }
    }
    on() {
        this.obniz.io.animation(this.identifier, 'resume');
    }
    off() {
        this.obniz.io.animation(this.identifier, 'pause');
        for (let i = 0; i < this.segments.length; i++) {
            this.segments[i].off();
        }
    }
}
if (typeof module === 'object') {
    module.exports = _7SegmentLEDArray;
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0cy9EaXNwbGF5LzdTZWdtZW50TEVEQXJyYXkvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0saUJBQWlCO0lBQ3JCO1FBQ0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxFQUFFLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUU1QyxJQUFJLENBQUMsSUFBSSxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDekIsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ2hDLENBQUM7SUFFRCxNQUFNLENBQUMsSUFBSTtRQUNULE9BQU87WUFDTCxJQUFJLEVBQUUsa0JBQWtCO1NBQ3pCLENBQUM7SUFDSixDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQUs7UUFDVCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUVuQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxLQUFLLENBQUMsSUFBSTtRQUNSLElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1lBQzVCLElBQUksR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFdEIsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEVBQUU7Z0JBQ3BCLElBQUksR0FBRyxHQUFHLElBQUksQ0FBQztnQkFFZixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7b0JBQzdDLElBQUksS0FBSyxLQUFLLENBQUMsRUFBRTt3QkFDZixJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLENBQUM7cUJBQ2xDO3lCQUFNO3dCQUNMLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7cUJBQ3hCO29CQUNELEdBQUcsR0FBRyxHQUFHLEdBQUcsRUFBRSxDQUFDO2lCQUNoQjtZQUNILENBQUMsQ0FBQztZQUVGLElBQUksVUFBVSxHQUFHLEVBQUUsQ0FBQztZQUNwQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQzdDLFVBQVUsQ0FBQyxJQUFJLENBQUM7b0JBQ2QsUUFBUSxFQUFFLENBQUM7b0JBQ1gsS0FBSyxFQUFFLEtBQUs7aUJBQ2IsQ0FBQyxDQUFDO2FBQ0o7WUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxNQUFNLEVBQUUsVUFBVSxDQUFDLENBQUM7U0FDOUQ7SUFDSCxDQUFDO0lBRUQsRUFBRTtRQUNBLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLFFBQVEsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxHQUFHO1FBQ0QsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFDbEQsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7U0FDeEI7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtJQUM5QixNQUFNLENBQUMsT0FBTyxHQUFHLGlCQUFpQixDQUFDO0NBQ3BDIiwiZmlsZSI6InBhcnRzL0Rpc3BsYXkvN1NlZ21lbnRMRURBcnJheS9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIF83U2VnbWVudExFREFycmF5IHtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pZGVudGlmaWVyID0gJycgKyBuZXcgRGF0ZSgpLmdldFRpbWUoKTtcblxuICAgIHRoaXMua2V5cyA9IFsnc2VnbWVudHMnXTtcbiAgICB0aGlzLnJlcXVpcmVkS2V5cyA9IHRoaXMua2V5cztcbiAgfVxuXG4gIHN0YXRpYyBpbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiAnN1NlZ21lbnRMRURBcnJheScsXG4gICAgfTtcbiAgfVxuXG4gIHdpcmVkKG9ibml6KSB7XG4gICAgdGhpcy5vYm5peiA9IG9ibml6O1xuXG4gICAgdGhpcy5zZWdtZW50cyA9IHRoaXMucGFyYW1zLnNlZ21lbnRzO1xuICB9XG5cbiAgcHJpbnQoZGF0YSkge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ251bWJlcicpIHtcbiAgICAgIGRhdGEgPSBwYXJzZUludChkYXRhKTtcblxuICAgICAgY29uc3QgcHJpbnQgPSBpbmRleCA9PiB7XG4gICAgICAgIGxldCB2YWwgPSBkYXRhO1xuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZWdtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChpbmRleCA9PT0gaSkge1xuICAgICAgICAgICAgdGhpcy5zZWdtZW50c1tpXS5wcmludCh2YWwgJSAxMCk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2VnbWVudHNbaV0ub2ZmKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHZhbCA9IHZhbCAvIDEwO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICBsZXQgYW5pbWF0aW9ucyA9IFtdO1xuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGFuaW1hdGlvbnMucHVzaCh7XG4gICAgICAgICAgZHVyYXRpb246IDMsXG4gICAgICAgICAgc3RhdGU6IHByaW50LFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgdGhpcy5vYm5pei5pby5hbmltYXRpb24odGhpcy5pZGVudGlmaWVyLCAnbG9vcCcsIGFuaW1hdGlvbnMpO1xuICAgIH1cbiAgfVxuXG4gIG9uKCkge1xuICAgIHRoaXMub2JuaXouaW8uYW5pbWF0aW9uKHRoaXMuaWRlbnRpZmllciwgJ3Jlc3VtZScpO1xuICB9XG5cbiAgb2ZmKCkge1xuICAgIHRoaXMub2JuaXouaW8uYW5pbWF0aW9uKHRoaXMuaWRlbnRpZmllciwgJ3BhdXNlJyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLnNlZ21lbnRzW2ldLm9mZigpO1xuICAgIH1cbiAgfVxufVxuXG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBfN1NlZ21lbnRMRURBcnJheTtcbn1cbiJdfQ==
