"use strict";
class LED {
    constructor() {
        this.keys = ['anode', 'cathode'];
        this.requiredKeys = ['anode'];
    }
    static info() {
        return {
            name: 'LED',
        };
    }
    wired(obniz) {
        function getIO(io) {
            if (io && typeof io === 'object') {
                if (typeof io['output'] === 'function') {
                    return io;
                }
            }
            return obniz.getIO(io);
        }
        this.obniz = obniz;
        this.io_anode = getIO(this.params.anode);
        this.io_anode.output(false);
        if (this.obniz.isValidIO(this.params.cathode)) {
            this.io_cathode = getIO(this.params.cathode);
            this.io_cathode.output(false);
        }
        this.animationName = 'Led-' + this.params.anode;
    }
    on() {
        this.endBlink();
        this.io_anode.output(true);
    }
    off() {
        this.endBlink();
        this.io_anode.output(false);
    }
    output(value) {
        if (value) {
            this.on();
        }
        else {
            this.off();
        }
    }
    endBlink() {
        this.obniz.io.animation(this.animationName, 'pause');
    }
    blink(interval) {
        if (!interval) {
            interval = 100;
        }
        let frames = [
            {
                duration: interval,
                state: function (index) {
                    // index = 0
                    this.io_anode.output(true); // on
                }.bind(this),
            },
            {
                duration: interval,
                state: function (index) {
                    // index = 0
                    this.io_anode.output(false); //off
                }.bind(this),
            },
        ];
        this.obniz.io.animation(this.animationName, 'loop', frames);
    }
}
if (typeof module === 'object') {
    module.exports = LED;
}

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0cy9MaWdodC9MRUQvaW5kZXguanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE1BQU0sR0FBRztJQUNQO1FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxDQUFDLE9BQU8sRUFBRSxTQUFTLENBQUMsQ0FBQztRQUNqQyxJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELE1BQU0sQ0FBQyxJQUFJO1FBQ1QsT0FBTztZQUNMLElBQUksRUFBRSxLQUFLO1NBQ1osQ0FBQztJQUNKLENBQUM7SUFFRCxLQUFLLENBQUMsS0FBSztRQUNULFNBQVMsS0FBSyxDQUFDLEVBQUU7WUFDZixJQUFJLEVBQUUsSUFBSSxPQUFPLEVBQUUsS0FBSyxRQUFRLEVBQUU7Z0JBQ2hDLElBQUksT0FBTyxFQUFFLENBQUMsUUFBUSxDQUFDLEtBQUssVUFBVSxFQUFFO29CQUN0QyxPQUFPLEVBQUUsQ0FBQztpQkFDWDthQUNGO1lBQ0QsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3pCLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsUUFBUSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVCLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUM3QyxJQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdDLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQy9CO1FBQ0QsSUFBSSxDQUFDLGFBQWEsR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7SUFDbEQsQ0FBQztJQUVELEVBQUU7UUFDQSxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELEdBQUc7UUFDRCxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDaEIsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLO1FBQ1YsSUFBSSxLQUFLLEVBQUU7WUFDVCxJQUFJLENBQUMsRUFBRSxFQUFFLENBQUM7U0FDWDthQUFNO1lBQ0wsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ1o7SUFDSCxDQUFDO0lBRUQsUUFBUTtRQUNOLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFFRCxLQUFLLENBQUMsUUFBUTtRQUNaLElBQUksQ0FBQyxRQUFRLEVBQUU7WUFDYixRQUFRLEdBQUcsR0FBRyxDQUFDO1NBQ2hCO1FBQ0QsSUFBSSxNQUFNLEdBQUc7WUFDWDtnQkFDRSxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsS0FBSyxFQUFFLFVBQVMsS0FBSztvQkFDbkIsWUFBWTtvQkFDWixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEtBQUs7Z0JBQ25DLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ2I7WUFDRDtnQkFDRSxRQUFRLEVBQUUsUUFBUTtnQkFDbEIsS0FBSyxFQUFFLFVBQVMsS0FBSztvQkFDbkIsWUFBWTtvQkFDWixJQUFJLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUs7Z0JBQ3BDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO2FBQ2I7U0FDRixDQUFDO1FBRUYsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlELENBQUM7Q0FDRjtBQUVELElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO0lBQzlCLE1BQU0sQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO0NBQ3RCIiwiZmlsZSI6InBhcnRzL0xpZ2h0L0xFRC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIExFRCB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMua2V5cyA9IFsnYW5vZGUnLCAnY2F0aG9kZSddO1xuICAgIHRoaXMucmVxdWlyZWRLZXlzID0gWydhbm9kZSddO1xuICB9XG5cbiAgc3RhdGljIGluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6ICdMRUQnLFxuICAgIH07XG4gIH1cblxuICB3aXJlZChvYm5peikge1xuICAgIGZ1bmN0aW9uIGdldElPKGlvKSB7XG4gICAgICBpZiAoaW8gJiYgdHlwZW9mIGlvID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAodHlwZW9mIGlvWydvdXRwdXQnXSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgIHJldHVybiBpbztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgcmV0dXJuIG9ibml6LmdldElPKGlvKTtcbiAgICB9XG5cbiAgICB0aGlzLm9ibml6ID0gb2JuaXo7XG4gICAgdGhpcy5pb19hbm9kZSA9IGdldElPKHRoaXMucGFyYW1zLmFub2RlKTtcbiAgICB0aGlzLmlvX2Fub2RlLm91dHB1dChmYWxzZSk7XG4gICAgaWYgKHRoaXMub2JuaXouaXNWYWxpZElPKHRoaXMucGFyYW1zLmNhdGhvZGUpKSB7XG4gICAgICB0aGlzLmlvX2NhdGhvZGUgPSBnZXRJTyh0aGlzLnBhcmFtcy5jYXRob2RlKTtcbiAgICAgIHRoaXMuaW9fY2F0aG9kZS5vdXRwdXQoZmFsc2UpO1xuICAgIH1cbiAgICB0aGlzLmFuaW1hdGlvbk5hbWUgPSAnTGVkLScgKyB0aGlzLnBhcmFtcy5hbm9kZTtcbiAgfVxuXG4gIG9uKCkge1xuICAgIHRoaXMuZW5kQmxpbmsoKTtcbiAgICB0aGlzLmlvX2Fub2RlLm91dHB1dCh0cnVlKTtcbiAgfVxuXG4gIG9mZigpIHtcbiAgICB0aGlzLmVuZEJsaW5rKCk7XG4gICAgdGhpcy5pb19hbm9kZS5vdXRwdXQoZmFsc2UpO1xuICB9XG5cbiAgb3V0cHV0KHZhbHVlKSB7XG4gICAgaWYgKHZhbHVlKSB7XG4gICAgICB0aGlzLm9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMub2ZmKCk7XG4gICAgfVxuICB9XG5cbiAgZW5kQmxpbmsoKSB7XG4gICAgdGhpcy5vYm5pei5pby5hbmltYXRpb24odGhpcy5hbmltYXRpb25OYW1lLCAncGF1c2UnKTtcbiAgfVxuXG4gIGJsaW5rKGludGVydmFsKSB7XG4gICAgaWYgKCFpbnRlcnZhbCkge1xuICAgICAgaW50ZXJ2YWwgPSAxMDA7XG4gICAgfVxuICAgIGxldCBmcmFtZXMgPSBbXG4gICAgICB7XG4gICAgICAgIGR1cmF0aW9uOiBpbnRlcnZhbCxcbiAgICAgICAgc3RhdGU6IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgLy8gaW5kZXggPSAwXG4gICAgICAgICAgdGhpcy5pb19hbm9kZS5vdXRwdXQodHJ1ZSk7IC8vIG9uXG4gICAgICAgIH0uYmluZCh0aGlzKSxcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGR1cmF0aW9uOiBpbnRlcnZhbCxcbiAgICAgICAgc3RhdGU6IGZ1bmN0aW9uKGluZGV4KSB7XG4gICAgICAgICAgLy8gaW5kZXggPSAwXG4gICAgICAgICAgdGhpcy5pb19hbm9kZS5vdXRwdXQoZmFsc2UpOyAvL29mZlxuICAgICAgICB9LmJpbmQodGhpcyksXG4gICAgICB9LFxuICAgIF07XG5cbiAgICB0aGlzLm9ibml6LmlvLmFuaW1hdGlvbih0aGlzLmFuaW1hdGlvbk5hbWUsICdsb29wJywgZnJhbWVzKTtcbiAgfVxufVxuXG5pZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSBMRUQ7XG59XG4iXX0=
