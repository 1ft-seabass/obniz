{"version":3,"sources":["../src/obniz/libs/measurements/measure.ts"],"names":[],"mappings":"AAEA,cAAM,YAAY;IACT,KAAK,EAAE,GAAG,CAAC;IACX,SAAS,EAAE,GAAG,CAAC;IACf,MAAM,EAAE,GAAG,CAAC;gBAEP,KAAK,EAAE,GAAG;IAKf,MAAM;IAIN,IAAI,CAAC,MAAM,EAAE,GAAG;IA4ChB,QAAQ,CAAC,GAAG,EAAE,GAAG;CAMzB;AAED,eAAe,YAAY,CAAC","file":"measure.d.ts","sourcesContent":["import ObnizUtil from \"../utils/util\";\n\nclass ObnizMeasure {\n  public obniz: any;\n  public observers: any;\n  public params: any;\n\n  constructor(obniz: any) {\n    this.obniz = obniz;\n    this._reset();\n  }\n\n  public _reset() {\n    this.observers = [];\n  }\n\n  public echo(params: any) {\n    const err: any = ObnizUtil._requiredKeys(params, [\n      \"io_pulse\",\n      \"pulse\",\n      \"pulse_width\",\n      \"io_echo\",\n      \"measure_edges\",\n    ]);\n    if (err) {\n      throw new Error(\n        \"Measure start param '\" + err + \"' required, but not found \",\n      );\n    }\n    this.params = ObnizUtil._keyFilter(params, [\n      \"io_pulse\",\n      \"pulse\",\n      \"pulse_width\",\n      \"io_echo\",\n      \"measure_edges\",\n      \"timeout\",\n      \"callback\",\n    ]);\n\n    const echo: any = {};\n    echo.io_pulse = this.params.io_pulse;\n    echo.pulse = this.params.pulse;\n    echo.pulse_width = this.params.pulse_width;\n    echo.io_echo = this.params.io_echo;\n    echo.measure_edges = this.params.measure_edges;\n    if (typeof this.params.timeout === \"number\") {\n      echo.timeout = this.params.timeout;\n    }\n\n    this.obniz.send({\n      measure: {\n        echo,\n      },\n    });\n\n    if (this.params.callback) {\n      this.observers.push(this.params.callback);\n    }\n  }\n\n  public notified(obj: any) {\n    const callback: any = this.observers.shift();\n    if (callback) {\n      callback(obj.echo);\n    }\n  }\n}\n\nexport default ObnizMeasure;\n"]}