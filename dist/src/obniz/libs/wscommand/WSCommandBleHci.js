"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class WSCommandBleHci {
    constructor(delegate) {
        this._delegate = delegate;
        this._CommandHCIInit = 41;
        this._CommandHCIDeinit = 42;
        this._CommandHCISend = 43;
        this._CommandHCIRecv = 44;
    }
    schemaData() {
        return [{ uri: "/request/ble/hci/write", onValid: this.send.bind(this) }];
    }
    notifyFunctionList() {
        const funcList = {};
        funcList[this._CommandHCIRecv] = this.recv.bind(this);
        return funcList;
    }
    send(params, module) {
        const buf = new Uint8Array(params.hci.write.length);
        buf.set(params.hci.write);
        this._delegate.sendCommand(this._CommandHCISend, buf);
    }
    recv(objToSend, payload) {
        const arr = new Array(payload.byteLength);
        for (let i = 0; i < arr.length; i++) {
            arr[i] = payload[i];
        }
        objToSend.ble = objToSend.ble || {};
        objToSend.ble.hci = objToSend.ble.hci || {};
        objToSend.ble.hci.read = { data: arr };
    }
}
exports.default = WSCommandBleHci;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vYm5pei9saWJzL3dzY29tbWFuZC9XU0NvbW1hbmRCbGVIY2kudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLGVBQWU7SUFPbkIsWUFBWSxRQUFhO1FBQ3ZCLElBQUksQ0FBQyxTQUFTLEdBQUcsUUFBUSxDQUFDO1FBQzFCLElBQUksQ0FBQyxlQUFlLEdBQUcsRUFBRSxDQUFDO1FBQzFCLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7UUFDMUIsSUFBSSxDQUFDLGVBQWUsR0FBRyxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVNLFVBQVU7UUFDZixPQUFPLENBQUMsRUFBQyxHQUFHLEVBQUUsd0JBQXdCLEVBQUUsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUMxRSxDQUFDO0lBRU0sa0JBQWtCO1FBQ3ZCLE1BQU0sUUFBUSxHQUFRLEVBQUUsQ0FBQztRQUN6QixRQUFRLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUM7SUFFTSxJQUFJLENBQUMsTUFBVyxFQUFFLE1BQVk7UUFDbkMsTUFBTSxHQUFHLEdBQVEsSUFBSSxVQUFVLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDekQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFCLElBQUksQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVNLElBQUksQ0FBQyxTQUFjLEVBQUUsT0FBYTtRQUN2QyxNQUFNLEdBQUcsR0FBUSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEdBQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDbkMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNyQjtRQUVELFNBQVMsQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUM7UUFDcEMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDO1FBQzVDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxFQUFDLElBQUksRUFBRSxHQUFHLEVBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxlQUFlLENBQUMiLCJmaWxlIjoic3JjL29ibml6L2xpYnMvd3Njb21tYW5kL1dTQ29tbWFuZEJsZUhjaS5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFdTQ29tbWFuZEJsZUhjaSB7XG4gIHB1YmxpYyBfZGVsZWdhdGU6IGFueTtcbiAgcHVibGljIF9Db21tYW5kSENJSW5pdDogYW55O1xuICBwdWJsaWMgX0NvbW1hbmRIQ0lEZWluaXQ6IGFueTtcbiAgcHVibGljIF9Db21tYW5kSENJU2VuZDogYW55O1xuICBwdWJsaWMgX0NvbW1hbmRIQ0lSZWN2OiBhbnk7XG5cbiAgY29uc3RydWN0b3IoZGVsZWdhdGU6IGFueSkge1xuICAgIHRoaXMuX2RlbGVnYXRlID0gZGVsZWdhdGU7XG4gICAgdGhpcy5fQ29tbWFuZEhDSUluaXQgPSA0MTtcbiAgICB0aGlzLl9Db21tYW5kSENJRGVpbml0ID0gNDI7XG4gICAgdGhpcy5fQ29tbWFuZEhDSVNlbmQgPSA0MztcbiAgICB0aGlzLl9Db21tYW5kSENJUmVjdiA9IDQ0O1xuICB9XG5cbiAgcHVibGljIHNjaGVtYURhdGEoKSB7XG4gICAgcmV0dXJuIFt7dXJpOiBcIi9yZXF1ZXN0L2JsZS9oY2kvd3JpdGVcIiwgb25WYWxpZDogdGhpcy5zZW5kLmJpbmQodGhpcyl9XTtcbiAgfVxuXG4gIHB1YmxpYyBub3RpZnlGdW5jdGlvbkxpc3QoKSB7XG4gICAgY29uc3QgZnVuY0xpc3Q6IGFueSA9IHt9O1xuICAgIGZ1bmNMaXN0W3RoaXMuX0NvbW1hbmRIQ0lSZWN2XSA9IHRoaXMucmVjdi5iaW5kKHRoaXMpO1xuICAgIHJldHVybiBmdW5jTGlzdDtcbiAgfVxuXG4gIHB1YmxpYyBzZW5kKHBhcmFtczogYW55LCBtb2R1bGU/OiBhbnkpIHtcbiAgICBjb25zdCBidWY6IGFueSA9IG5ldyBVaW50OEFycmF5KHBhcmFtcy5oY2kud3JpdGUubGVuZ3RoKTtcbiAgICBidWYuc2V0KHBhcmFtcy5oY2kud3JpdGUpO1xuICAgIHRoaXMuX2RlbGVnYXRlLnNlbmRDb21tYW5kKHRoaXMuX0NvbW1hbmRIQ0lTZW5kLCBidWYpO1xuICB9XG5cbiAgcHVibGljIHJlY3Yob2JqVG9TZW5kOiBhbnksIHBheWxvYWQ/OiBhbnkpIHtcbiAgICBjb25zdCBhcnI6IGFueSA9IG5ldyBBcnJheShwYXlsb2FkLmJ5dGVMZW5ndGgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBhcnJbaV0gPSBwYXlsb2FkW2ldO1xuICAgIH1cblxuICAgIG9ialRvU2VuZC5ibGUgPSBvYmpUb1NlbmQuYmxlIHx8IHt9O1xuICAgIG9ialRvU2VuZC5ibGUuaGNpID0gb2JqVG9TZW5kLmJsZS5oY2kgfHwge307XG4gICAgb2JqVG9TZW5kLmJsZS5oY2kucmVhZCA9IHtkYXRhOiBhcnJ9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFdTQ29tbWFuZEJsZUhjaTtcbiJdfQ==
