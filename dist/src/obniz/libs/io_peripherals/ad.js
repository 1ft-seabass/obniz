"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class PeripheralAD {
    constructor(Obniz, id) {
        this.Obniz = Obniz;
        this.id = id;
        this._reset();
    }
    _reset() {
        this.value = 0.0;
        this.observers = [];
    }
    addObserver(callback) {
        if (callback) {
            this.observers.push(callback);
        }
    }
    start(callback) {
        this.onchange = callback;
        const obj = {};
        obj["ad" + this.id] = {
            stream: true,
        };
        this.Obniz.send(obj);
        return this.value;
    }
    getWait() {
        const self = this;
        return new Promise((resolve, reject) => {
            self.addObserver(resolve);
            const obj = {};
            obj["ad" + self.id] = {
                stream: false,
            };
            self.Obniz.send(obj);
        });
    }
    end() {
        this.onchange = null;
        const obj = {};
        obj["ad" + this.id] = null;
        this.Obniz.send(obj);
        return;
    }
    notified(obj) {
        this.value = obj;
        if (this.onchange) {
            this.onchange(obj);
        }
        const callback = this.observers.shift();
        if (callback) {
            callback(obj);
        }
    }
}
exports.default = PeripheralAD;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vYm5pei9saWJzL2lvX3BlcmlwaGVyYWxzL2FkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTSxZQUFZO0lBT2hCLFlBQVksS0FBVSxFQUFFLEVBQU87UUFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDaEIsQ0FBQztJQUVNLE1BQU07UUFDWCxJQUFJLENBQUMsS0FBSyxHQUFHLEdBQUcsQ0FBQztRQUNqQixJQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQztJQUN0QixDQUFDO0lBRU0sV0FBVyxDQUFDLFFBQWE7UUFDOUIsSUFBSSxRQUFRLEVBQUU7WUFDWixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUMvQjtJQUNILENBQUM7SUFFTSxLQUFLLENBQUMsUUFBYTtRQUN4QixJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUN6QixNQUFNLEdBQUcsR0FBUSxFQUFFLENBQUM7UUFDcEIsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUc7WUFDcEIsTUFBTSxFQUFFLElBQUk7U0FDYixDQUFDO1FBQ0YsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDckIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFFTSxPQUFPO1FBQ1osTUFBTSxJQUFJLEdBQVEsSUFBSSxDQUFDO1FBQ3ZCLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFZLEVBQUUsTUFBVyxFQUFFLEVBQUU7WUFDL0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUMxQixNQUFNLEdBQUcsR0FBUSxFQUFFLENBQUM7WUFDcEIsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUc7Z0JBQ3BCLE1BQU0sRUFBRSxLQUFLO2FBQ2QsQ0FBQztZQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLEdBQUc7UUFDUixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixNQUFNLEdBQUcsR0FBUSxFQUFFLENBQUM7UUFDcEIsR0FBRyxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JCLE9BQU87SUFDVCxDQUFDO0lBRU0sUUFBUSxDQUFDLEdBQVE7UUFDdEIsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDakIsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7U0FDcEI7UUFDRCxNQUFNLFFBQVEsR0FBUSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdDLElBQUksUUFBUSxFQUFFO1lBQ1osUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2Y7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxZQUFZLENBQUMiLCJmaWxlIjoic3JjL29ibml6L2xpYnMvaW9fcGVyaXBoZXJhbHMvYWQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBQZXJpcGhlcmFsQUQge1xuICBwdWJsaWMgT2JuaXo6IGFueTtcbiAgcHVibGljIGlkOiBhbnk7XG4gIHB1YmxpYyB2YWx1ZTogYW55O1xuICBwdWJsaWMgb2JzZXJ2ZXJzOiBhbnk7XG4gIHB1YmxpYyBvbmNoYW5nZTogYW55O1xuXG4gIGNvbnN0cnVjdG9yKE9ibml6OiBhbnksIGlkOiBhbnkpIHtcbiAgICB0aGlzLk9ibml6ID0gT2JuaXo7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuX3Jlc2V0KCk7XG4gIH1cblxuICBwdWJsaWMgX3Jlc2V0KCkge1xuICAgIHRoaXMudmFsdWUgPSAwLjA7XG4gICAgdGhpcy5vYnNlcnZlcnMgPSBbXTtcbiAgfVxuXG4gIHB1YmxpYyBhZGRPYnNlcnZlcihjYWxsYmFjazogYW55KSB7XG4gICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICB0aGlzLm9ic2VydmVycy5wdXNoKGNhbGxiYWNrKTtcbiAgICB9XG4gIH1cblxuICBwdWJsaWMgc3RhcnQoY2FsbGJhY2s6IGFueSkge1xuICAgIHRoaXMub25jaGFuZ2UgPSBjYWxsYmFjaztcbiAgICBjb25zdCBvYmo6IGFueSA9IHt9O1xuICAgIG9ialtcImFkXCIgKyB0aGlzLmlkXSA9IHtcbiAgICAgIHN0cmVhbTogdHJ1ZSxcbiAgICB9O1xuICAgIHRoaXMuT2JuaXouc2VuZChvYmopO1xuICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICB9XG5cbiAgcHVibGljIGdldFdhaXQoKSB7XG4gICAgY29uc3Qgc2VsZjogYW55ID0gdGhpcztcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmU6IGFueSwgcmVqZWN0OiBhbnkpID0+IHtcbiAgICAgIHNlbGYuYWRkT2JzZXJ2ZXIocmVzb2x2ZSk7XG4gICAgICBjb25zdCBvYmo6IGFueSA9IHt9O1xuICAgICAgb2JqW1wiYWRcIiArIHNlbGYuaWRdID0ge1xuICAgICAgICBzdHJlYW06IGZhbHNlLFxuICAgICAgfTtcbiAgICAgIHNlbGYuT2JuaXouc2VuZChvYmopO1xuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGVuZCgpIHtcbiAgICB0aGlzLm9uY2hhbmdlID0gbnVsbDtcbiAgICBjb25zdCBvYmo6IGFueSA9IHt9O1xuICAgIG9ialtcImFkXCIgKyB0aGlzLmlkXSA9IG51bGw7XG4gICAgdGhpcy5PYm5pei5zZW5kKG9iaik7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgcHVibGljIG5vdGlmaWVkKG9iajogYW55KSB7XG4gICAgdGhpcy52YWx1ZSA9IG9iajtcbiAgICBpZiAodGhpcy5vbmNoYW5nZSkge1xuICAgICAgdGhpcy5vbmNoYW5nZShvYmopO1xuICAgIH1cbiAgICBjb25zdCBjYWxsYmFjazogYW55ID0gdGhpcy5vYnNlcnZlcnMuc2hpZnQoKTtcbiAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgIGNhbGxiYWNrKG9iaik7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFBlcmlwaGVyYWxBRDtcbiJdfQ==
