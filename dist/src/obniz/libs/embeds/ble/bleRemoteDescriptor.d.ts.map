{"version":3,"sources":["../src/obniz/libs/embeds/ble/bleRemoteDescriptor.ts"],"names":[],"mappings":"AAKA,OAAO,0BAA0B,MAAM,8BAA8B,CAAC;AACtE;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,mBAAoB,SAAQ,0BAA0B;IAClE,cAAc,EAAE,GAAG,CAAC;IACpB,IAAI,EAAE,GAAG,CAAC;gBAEL,MAAM,EAAE,GAAG;IAIvB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAEM,IAAI;IAcJ,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG;CAkB3C","file":"bleRemoteDescriptor.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.old\n */\nimport BleHelper from \"./bleHelper\";\nimport BleRemoteAttributeAbstract from \"./bleRemoteAttributeAbstract\";\n/**\n * @category Use as Central\n */\nexport default class BleRemoteDescriptor extends BleRemoteAttributeAbstract {\n  public characteristic: any;\n  public uuid: any;\n\n  constructor(params: any) {\n    super(params);\n  }\n\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  public read() {\n    const obj: any = {\n      ble: {\n        read_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n\n  public write(array: any, needResponse: any) {\n    if (needResponse === undefined) {\n      needResponse = true;\n    }\n    const obj: any = {\n      ble: {\n        write_descriptor: {\n          address: this.characteristic.service.peripheral.address,\n          service_uuid: BleHelper.uuidFilter(this.characteristic.service.uuid),\n          characteristic_uuid: BleHelper.uuidFilter(this.characteristic.uuid),\n          descriptor_uuid: BleHelper.uuidFilter(this.uuid),\n          data: array,\n          needResponse,\n        },\n      },\n    };\n    this.characteristic.service.peripheral.Obniz.send(obj);\n  }\n}\n"]}