{"version":3,"sources":["../src/obniz/libs/embeds/bleHci/bleDescriptor.ts"],"names":[],"mappings":"AAAA;;;GAGG;AACH,OAAO,yBAAyB,MAAM,6BAA6B,CAAC;AACpE;;GAEG;AACH,MAAM,CAAC,OAAO,OAAO,aAAc,SAAQ,yBAAyB;IAC3D,WAAW,EAAE,GAAG,CAAC;gBAEZ,GAAG,EAAE,GAAG;IASpB,IAAI,UAAU,IAAI,MAAM,GAAG,IAAI,CAE9B;IAEM,aAAa,CAAC,KAAK,EAAE,GAAG;IAMxB,gBAAgB,CAAC,KAAK,EAAE,GAAG;IAM3B,MAAM;CAQd","file":"bleDescriptor.d.ts","sourcesContent":["/**\n * @packageDocumentation\n * @module ObnizCore.Components.Ble.Hci\n */\nimport BleLocalAttributeAbstract from \"./bleLocalAttributeAbstract\";\n/**\n * @category Use as Peripheral\n */\nexport default class BleDescriptor extends BleLocalAttributeAbstract {\n  public permissions: any;\n\n  constructor(obj: any) {\n    super(obj);\n\n    this.permissions = obj.permissions || [];\n    if (!Array.isArray(this.permissions)) {\n      this.permissions = [this.permissions];\n    }\n  }\n\n  get parentName(): string | null {\n    return \"characteristic\";\n  }\n\n  public addPermission(param: any) {\n    if (!this.permissions.includes(param)) {\n      this.permissions.push(param);\n    }\n  }\n\n  public removePermission(param: any) {\n    this.permissions = this.permissions.filter ((elm: any ) => {\n      return elm !== param;\n    });\n  }\n\n  public toJSON() {\n    const obj: any = super.toJSON();\n\n    if (this.permissions.length > 0) {\n      obj.permissions = this.permissions;\n    }\n    return obj;\n  }\n}\n"]}