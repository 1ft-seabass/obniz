{"version":3,"sources":["../src/parts/Memory/24LC256/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,eAAe;CAAI;AACpC,cAAM,QAAS,YAAW,mBAAmB;WAE7B,IAAI,IAAI,cAAc;IAM7B,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,MAAM,EAAE,GAAG,CAAC;IACZ,GAAG,EAAE,GAAG,CAAC;IACT,KAAK,EAAG,KAAK,CAAC;;IAOd,KAAK,CAAC,KAAK,EAAE,KAAK;IAQlB,GAAG,CAAC,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG;IASrB,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,GAAG;CAO/C;AAED,eAAe,QAAQ,CAAC","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface _24LC256Options { }\nclass _24LC256 implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"24LC256\",\n    };\n  }\n\n  public requiredKeys: string[];\n  public keys: string[];\n  public params: any;\n  public i2c: any;\n  public obniz!: Obniz;\n\n  constructor() {\n    this.requiredKeys = [\"address\"];\n    this.keys = [\"sda\", \"scl\", \"clock\", \"pull\", \"i2c\", \"address\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.params.mode = this.params.mode || \"master\"; // for i2c\n    this.params.clock = this.params.clock || 400 * 1000; // for i2c\n    this.i2c = obniz.getI2CWithConfig(this.params);\n  }\n\n  // Module functions\n\n  public set(address: any, data: any) {\n    const array: any = [];\n    array.push((address >> 8) & 0xff);\n    array.push(address & 0xff);\n    array.push.apply(array, data);\n    this.i2c.write(0x50, array);\n    this.obniz.wait(4 + 1); // write cycle time = 4ms for 24XX00, 1.5ms for 24C01C, 24C02C\n  }\n\n  public async getWait(address: any, length: any) {\n    const array: any = [];\n    array.push((address >> 8) & 0xff);\n    array.push(address & 0xff);\n    this.i2c.write(0x50, array);\n    return await this.i2c.readWait(0x50, length);\n  }\n}\n\nexport default _24LC256;\n"]}