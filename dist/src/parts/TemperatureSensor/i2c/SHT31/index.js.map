{"version":3,"sources":["../src/parts/TemperatureSensor/i2c/SHT31/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAAM,KAAK;IAmBT;QACE,IAAI,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG;YACV,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,aAAa;YACb,KAAK;YACL,MAAM;SACP,CAAC;QAEF,IAAI,CAAC,MAAM,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAEvC,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC;QAC5B,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,CAAC,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,EAAE,CAAC;QAE9B,aAAa;QACb,IAAI,CAAC,QAAQ,CAAC,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAjDM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,OAAO;SACd,CAAC;IACJ,CAAC;IA+CM,KAAK,CAAC,KAAU;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE3C,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC,EAAE;YACjC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,KAAK,CAAC,EAAE;YACxC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;QAED,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,UAAU;QAC/D,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC,UAAU;QAC3D,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU;QACvD,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/C,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;IAC1D,CAAC;IAEY,OAAO;;YAClB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YACvD,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAChD,OAAO,MAAM,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC;KAAA;IAEY,WAAW;;YACtB,OAAO,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,WAAW,CAAC;QAC/C,CAAC;KAAA;IAEY,WAAW;;YACtB,OAAO,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,QAAQ,CAAC;QAC5C,CAAC;KAAA;IAEY,UAAU;;YACrB,MAAM,GAAG,GAAQ,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YAEtC,MAAM,OAAO,GAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,WAAW,GAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YAE7D,MAAM,OAAO,GAAQ,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAC3C,MAAM,QAAQ,GAAQ,GAAG,GAAG,CAAC,OAAO,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;YACpD,OAAO,EAAC,WAAW,EAAE,QAAQ,EAAC,CAAC;QACjC,CAAC;KAAA;CACF;AAED,kBAAe,KAAK,CAAC","file":"index.js","sourcesContent":["class SHT31 {\n\n  public static info() {\n    return {\n      name: \"SHT31\",\n    };\n  }\n\n  public requiredKeys: any;\n  public keys: any;\n  public ioKeys: any;\n  public commands: any;\n  public waitTime: any;\n  public obniz: any;\n  public params: any;\n  public io_adr: any;\n  public address: any;\n  public i2c: any;\n\n  constructor() {\n    this.requiredKeys = [\"adr\", \"addressmode\"];\n    this.keys = [\n      \"vcc\",\n      \"sda\",\n      \"scl\",\n      \"gnd\",\n      \"adr\",\n      \"addressmode\",\n      \"i2c\",\n      \"pull\",\n    ];\n\n    this.ioKeys = [\"vcc\", \"sda\", \"scl\", \"gnd\", \"adr\"];\n    this.commands = {};\n    this.commands.softReset = [0x30, 0xa2];\n    this.commands.highRepeatStreach = [0x2c, 0x06];\n    this.commands.middleRepeatStreach = [0x2c, 0x0d];\n    this.commands.lowRepeatStreach = [0x2c, 0x10];\n    this.commands.highRepeat = [0x24, 0x00];\n    this.commands.mediumRepeat = [0x24, 0x0b];\n    this.commands.lowRepeat = [0x24, 0x16];\n\n    this.waitTime = {};\n    this.waitTime.wakeup = 1;\n    this.waitTime.softReset = 1;\n    this.waitTime.lowRepeat = 4;\n    this.waitTime.mediumRepeat = 6;\n    this.waitTime.highRepeat = 15;\n\n    // not tested\n    this.commands.readStatus = [0xf3, 0x2d];\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.io_adr = obniz.getIO(this.params.adr);\n\n    if (this.params.addressmode === 4) {\n      this.io_adr.output(false);\n      this.address = 0x44;\n    } else if (this.params.addressmode === 5) {\n      this.io_adr.pull(null);\n      this.address = 0x45;\n    }\n\n    this.params.clock = this.params.clock || 100 * 1000; // for i2c\n    this.params.mode = this.params.mode || \"master\"; // for i2c\n    this.params.pull = this.params.pull || \"5v\"; // for i2c\n    this.i2c = obniz.getI2CWithConfig(this.params);\n    obniz.i2c0.write(this.address, this.commands.softReset);\n  }\n\n  public async getData() {\n    this.i2c.write(this.address, this.commands.highRepeat);\n    await this.obniz.wait(this.waitTime.highRepeat);\n    return await this.i2c.readWait(this.address, 6);\n  }\n\n  public async getTempWait() {\n    return (await this.getAllWait()).temperature;\n  }\n\n  public async getHumdWait() {\n    return (await this.getAllWait()).humidity;\n  }\n\n  public async getAllWait() {\n    const ret: any = await this.getData();\n\n    const tempBin: any = ret[0] * 256 + ret[1];\n    const temperature: any = -45 + 175 * (tempBin / (65536 - 1));\n\n    const humdBin: any = ret[3] * 256 + ret[4];\n    const humidity: any = 100 * (humdBin / (65536 - 1));\n    return {temperature, humidity};\n  }\n}\n\nexport default SHT31;\n"]}