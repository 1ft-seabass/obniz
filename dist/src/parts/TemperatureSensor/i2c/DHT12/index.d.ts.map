{"version":3,"sources":["../src/parts/TemperatureSensor/i2c/DHT12/index.ts"],"names":[],"mappings":"AAAA,OAAO,QAAQ,MAAM,mBAAmB,CAAC;AAEzC,cAAM,KAAM,SAAQ,QAAQ;WAEZ,IAAI;;;IAMX,QAAQ,EAAE,GAAG,CAAC;IAEd,OAAO;;;;;IAQD,cAAc;;;;IAmBd,WAAW;IAIX,WAAW;CAGzB;AAED,eAAe,KAAK,CAAC","file":"index.d.ts","sourcesContent":["import i2cParts from \"../../../i2cParts\";\n\nclass DHT12 extends i2cParts {\n\n  public static info() {\n    return {\n      name: \"DHT12\",\n    };\n  }\n\n  public readWait: any;\n\n  public i2cInfo() {\n    return {\n      address: 0x5c,\n      clock: 100000,\n      voltage: \"3v\",\n    };\n  }\n\n  public async getAllDataWait() {\n    const data: any = await this.readWait(0x00, 5);\n    const humidity: any = data[0] + data[1] * 0.1;\n    let temperature: any = data[2] + (data[3] & 0x7f) * 0.1;\n    if (data[3] & 0x80) {\n      temperature *= -1;\n    }\n\n    const checksum: any = data[0] + data[1] + data[2] + data[3];\n    if (checksum !== data[4]) {\n      return null;\n    }\n\n    return {\n      humidity,\n      temperature,\n    };\n  }\n\n  public async getTempWait() {\n    return (await this.getAllDataWait() as any).temperature;\n  }\n\n  public async getHumdWait() {\n    return (await this.getAllDataWait() as any ).humidity;\n  }\n}\n\nexport default DHT12;\n"]}