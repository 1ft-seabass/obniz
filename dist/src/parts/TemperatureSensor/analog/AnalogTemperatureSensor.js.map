{"version":3,"sources":["../src/parts/TemperatureSensor/analog/AnalogTemperatureSensor.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,MAAM,uBAAuB;IAS3B;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAEM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAI,CAAC,EAAE,CAAC,KAAK,CACX,CAAC,OAAY,EAAE,EAAE;YACf,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,CAAC,CACF,CAAC;IACJ,CAAC;IAEY,OAAO;;YAClB,MAAM,OAAO,GAAQ,MAAM,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC;YAC7C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC/B,OAAO,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC;KAAA;IAEM,QAAQ,CAAC,IAAS;IACzB,CAAC;IAEM,IAAI,CAAC,OAAY;QACtB,OAAO,CAAC,CAAC;IACX,CAAC;CACF;AAED,kBAAe,uBAAuB,CAAC","file":"AnalogTemperatureSensor.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface AnalogTemperatureSensorOptions { }\nclass AnalogTemperatureSensor implements ObnizPartsInterface {\n  public keys: string[];\n  public requiredKeys: string[];\n  public drive: any;\n  public obniz!: Obniz;\n  public params: any;\n  public ad: any;\n  public temp: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"output\"];\n    this.requiredKeys = [\"output\"];\n    this.drive = \"5v\";\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, this.drive);\n    this.ad = obniz.getAD(this.params.output);\n\n    this.ad.start(\n      (voltage: any) => {\n        this.temp = this.calc(voltage);\n        this.onchange(this.temp);\n      },\n    );\n  }\n\n  public async getWait() {\n    const voltage: any = await this.ad.getWait();\n    this.temp = this.calc(voltage);\n    return this.temp;\n  }\n\n  public onchange(temp: any) {\n  }\n\n  public calc(voltage: any) {\n    return 0;\n  }\n}\n\nexport default AnalogTemperatureSensor;\n"]}