{"version":3,"sources":["../src/parts/TemperatureSensor/spi/ADT7310/index.ts"],"names":[],"mappings":"AAAA,cAAM,OAAO;WAEG,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,YAAY,EAAE,GAAG,CAAC;IAClB,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,GAAG,EAAE,GAAG,CAAC;;IAOT,KAAK,CAAC,KAAK,EAAE,GAAG;IAYV,WAAW;CAczB;AAED,eAAe,OAAO,CAAC","file":"index.d.ts","sourcesContent":["class ADT7310 {\n\n  public static info() {\n    return {\n      name: \"ADT7310\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public obniz: any;\n  public params: any;\n  public spi: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"frequency\", \"din\", \"dout\", \"clk\", \"spi\"];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    this.params.mode = this.params.mode || \"master\";\n    this.params.frequency = this.params.frequency || 500000;\n    this.params.mosi = this.params.din;\n    this.params.miso = this.params.dout;\n    this.spi = this.obniz.getSpiWithConfig(this.params);\n  }\n\n  public async getTempWait() {\n    await this.spi.writeWait([0x54]); // send before each commands for stable\n    await this.obniz.wait(200);\n    const ret: any = await this.spi.writeWait([0x00, 0x00]);\n    let tempBin: any = ret[0] << 8;\n    tempBin |= ret[1];\n    tempBin = tempBin >> 3;\n\n    if (tempBin & 0x1000) {\n      tempBin = tempBin - 8192;\n    }\n\n    return tempBin / 16;\n  }\n}\n\nexport default ADT7310;\n"]}