"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class InfraredLED {
    constructor() {
        this.keys = ["anode", "cathode"];
        this.requiredKeys = ["anode"];
        this.dataSymbolLength = 0.07;
    }
    static info() {
        return {
            name: "InfraredLED",
        };
    }
    wired(obniz) {
        this.obniz = obniz;
        if (!this.obniz.isValidIO(this.params.anode)) {
            throw new Error("anode is not valid io");
        }
        if (this.params.cathode) {
            if (!this.obniz.isValidIO(this.params.cathode)) {
                throw new Error("cathode is not valid io");
            }
            this.io_cathode = obniz.getIO(this.params.cathode);
            this.io_cathode.output(false);
        }
        this.pwm = this.obniz.getFreePwm();
        this.pwm.start({ io: this.params.anode });
        this.pwm.freq(38000);
        this.obniz.wait(150); // TODO: this is instant fix for pwm start delay
    }
    send(arr) {
        if (arr && arr.length > 0 && arr[arr.length - 1] === 1) {
            arr.push(0);
        }
        this.pwm.modulate("am", this.dataSymbolLength, arr);
    }
}
exports.default = InfraredLED;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0cy9JbmZyYXJlZC9JbmZyYXJlZExFRC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sV0FBVztJQWdCZjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxPQUFPLEVBQUUsU0FBUyxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUM7SUFDL0IsQ0FBQztJQW5CTSxNQUFNLENBQUMsSUFBSTtRQUNoQixPQUFPO1lBQ0wsSUFBSSxFQUFFLGFBQWE7U0FDcEIsQ0FBQztJQUNKLENBQUM7SUFpQk0sS0FBSyxDQUFDLEtBQVU7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDNUMsTUFBTSxJQUFJLEtBQUssQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1NBQzFDO1FBQ0QsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLE9BQU8sRUFBRTtZQUN2QixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRTtnQkFDOUMsTUFBTSxJQUFJLEtBQUssQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO2FBQzVDO1lBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7WUFDbkQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDL0I7UUFDRCxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbkMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUMsQ0FBQyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsZ0RBQWdEO0lBQ3hFLENBQUM7SUFFTSxJQUFJLENBQUMsR0FBUTtRQUNsQixJQUFJLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDdEQsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQyxnQkFBZ0IsRUFBRSxHQUFHLENBQUMsQ0FBQztJQUN0RCxDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxXQUFXLENBQUMiLCJmaWxlIjoic3JjL3BhcnRzL0luZnJhcmVkL0luZnJhcmVkTEVEL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgSW5mcmFyZWRMRUQge1xuXG4gIHB1YmxpYyBzdGF0aWMgaW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogXCJJbmZyYXJlZExFRFwiLFxuICAgIH07XG4gIH1cblxuICBwdWJsaWMga2V5czogYW55O1xuICBwdWJsaWMgcmVxdWlyZWRLZXlzOiBhbnk7XG4gIHB1YmxpYyBkYXRhU3ltYm9sTGVuZ3RoOiBhbnk7XG4gIHB1YmxpYyBvYm5pejogYW55O1xuICBwdWJsaWMgcGFyYW1zOiBhbnk7XG4gIHB1YmxpYyBpb19jYXRob2RlOiBhbnk7XG4gIHB1YmxpYyBwd206IGFueTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmtleXMgPSBbXCJhbm9kZVwiLCBcImNhdGhvZGVcIl07XG4gICAgdGhpcy5yZXF1aXJlZEtleXMgPSBbXCJhbm9kZVwiXTtcblxuICAgIHRoaXMuZGF0YVN5bWJvbExlbmd0aCA9IDAuMDc7XG4gIH1cblxuICBwdWJsaWMgd2lyZWQob2JuaXo6IGFueSkge1xuICAgIHRoaXMub2JuaXogPSBvYm5pejtcbiAgICBpZiAoIXRoaXMub2JuaXouaXNWYWxpZElPKHRoaXMucGFyYW1zLmFub2RlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiYW5vZGUgaXMgbm90IHZhbGlkIGlvXCIpO1xuICAgIH1cbiAgICBpZiAodGhpcy5wYXJhbXMuY2F0aG9kZSkge1xuICAgICAgaWYgKCF0aGlzLm9ibml6LmlzVmFsaWRJTyh0aGlzLnBhcmFtcy5jYXRob2RlKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjYXRob2RlIGlzIG5vdCB2YWxpZCBpb1wiKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuaW9fY2F0aG9kZSA9IG9ibml6LmdldElPKHRoaXMucGFyYW1zLmNhdGhvZGUpO1xuICAgICAgdGhpcy5pb19jYXRob2RlLm91dHB1dChmYWxzZSk7XG4gICAgfVxuICAgIHRoaXMucHdtID0gdGhpcy5vYm5pei5nZXRGcmVlUHdtKCk7XG4gICAgdGhpcy5wd20uc3RhcnQoe2lvOiB0aGlzLnBhcmFtcy5hbm9kZX0pO1xuICAgIHRoaXMucHdtLmZyZXEoMzgwMDApO1xuICAgIHRoaXMub2JuaXoud2FpdCgxNTApOyAvLyBUT0RPOiB0aGlzIGlzIGluc3RhbnQgZml4IGZvciBwd20gc3RhcnQgZGVsYXlcbiAgfVxuXG4gIHB1YmxpYyBzZW5kKGFycjogYW55KSB7XG4gICAgaWYgKGFyciAmJiBhcnIubGVuZ3RoID4gMCAmJiBhcnJbYXJyLmxlbmd0aCAtIDFdID09PSAxKSB7XG4gICAgICBhcnIucHVzaCgwKTtcbiAgICB9XG4gICAgdGhpcy5wd20ubW9kdWxhdGUoXCJhbVwiLCB0aGlzLmRhdGFTeW1ib2xMZW5ndGgsIGFycik7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5mcmFyZWRMRUQ7XG4iXX0=
