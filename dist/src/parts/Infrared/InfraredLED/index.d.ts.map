{"version":3,"sources":["../src/parts/Infrared/InfraredLED/index.ts"],"names":[],"mappings":"AAAA,cAAM,WAAW;WAED,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,YAAY,EAAE,GAAG,CAAC;IAClB,gBAAgB,EAAE,GAAG,CAAC;IACtB,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,UAAU,EAAE,GAAG,CAAC;IAChB,GAAG,EAAE,GAAG,CAAC;;IAST,KAAK,CAAC,KAAK,EAAE,GAAG;IAkBhB,IAAI,CAAC,GAAG,EAAE,GAAG;CAMrB;AAED,eAAe,WAAW,CAAC","file":"index.d.ts","sourcesContent":["class InfraredLED {\n\n  public static info() {\n    return {\n      name: \"InfraredLED\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public dataSymbolLength: any;\n  public obniz: any;\n  public params: any;\n  public io_cathode: any;\n  public pwm: any;\n\n  constructor() {\n    this.keys = [\"anode\", \"cathode\"];\n    this.requiredKeys = [\"anode\"];\n\n    this.dataSymbolLength = 0.07;\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    if (!this.obniz.isValidIO(this.params.anode)) {\n      throw new Error(\"anode is not valid io\");\n    }\n    if (this.params.cathode) {\n      if (!this.obniz.isValidIO(this.params.cathode)) {\n        throw new Error(\"cathode is not valid io\");\n      }\n      this.io_cathode = obniz.getIO(this.params.cathode);\n      this.io_cathode.output(false);\n    }\n    this.pwm = this.obniz.getFreePwm();\n    this.pwm.start({io: this.params.anode});\n    this.pwm.freq(38000);\n    this.obniz.wait(150); // TODO: this is instant fix for pwm start delay\n  }\n\n  public send(arr: any) {\n    if (arr && arr.length > 0 && arr[arr.length - 1] === 1) {\n      arr.push(0);\n    }\n    this.pwm.modulate(\"am\", this.dataSymbolLength, arr);\n  }\n}\n\nexport default InfraredLED;\n"]}