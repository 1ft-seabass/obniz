{"version":3,"sources":["../src/parts/Magnet/HMC5883L/index.ts"],"names":[],"mappings":"AAAA,cAAM,QAAQ;WAEE,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,GAAG,EAAE,GAAG,CAAC;;IAWT,KAAK,CAAC,KAAK,EAAE,GAAG;IAahB,IAAI;IAKE,GAAG;CAgBjB;AAED,eAAe,QAAQ,CAAC","file":"index.d.ts","sourcesContent":["class HMC5883L {\n\n  public static info() {\n    return {\n      name: \"HMC5883L\",\n    };\n  }\n\n  public keys: any;\n  public address: any;\n  public obniz: any;\n  public params: any;\n  public i2c: any;\n\n  constructor() {\n    this.keys = [\"gnd\", \"sda\", \"scl\", \"i2c\"];\n\n    this.address = {};\n    this.address.device = 0x1e;\n    this.address.reset = [0x02, 0x00]; // Continuous Measurment Mode\n    this.address.xMSB = [0x03];\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    obniz.setVccGnd(null, this.params.gnd, \"3v\");\n\n    this.params.clock = 100000;\n    this.params.pull = \"3v\";\n    this.params.mode = \"master\";\n\n    this.i2c = obniz.getI2CWithConfig(this.params);\n\n    this.obniz.wait(500);\n  }\n\n  public init() {\n    this.i2c.write(this.address.device, this.address.reset);\n    this.obniz.wait(500);\n  }\n\n  public async get() {\n    this.i2c.write(this.address.device, this.address.xMSB);\n    const readed: any = await this.i2c.readWait(this.address.device, 2 * 3);\n\n    const obj: any = {};\n    const keys: any = [\"x\", \"y\", \"z\"];\n    for (let i = 0; i < 3; i++) {\n      let val: any = (readed[i * 2] << 8) | readed[i * 2 + 1];\n      if (val & 0x8000) {\n        val = val - 65536;\n      }\n      obj[keys[i]] = val;\n    }\n\n    return obj;\n  }\n}\n\nexport default HMC5883L;\n"]}