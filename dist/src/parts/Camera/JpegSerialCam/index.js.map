{"version":3,"sources":["../src/parts/Camera/JpegSerialCam/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["class JpegSerialCam {\n\n  public static info() {\n    return {\n      name: \"JpegSerialCam\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public ioKeys: any;\n  public displayName: any;\n  public displayIoNames: any;\n  public obniz: any;\n  public params: any;\n  public my_tx: any;\n  public my_rx: any;\n  public uart: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"cam_tx\", \"cam_rx\", \"gnd\"];\n    this.requiredKeys = [\"cam_tx\", \"cam_rx\"];\n\n    this.ioKeys = this.keys;\n    this.displayName = \"Jcam\";\n    this.displayIoNames = {cam_tx: \"camTx\", cam_rx: \"camRx\"};\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.my_tx = this.params.cam_rx;\n    this.my_rx = this.params.cam_tx;\n\n    this.obniz.getIO(this.my_tx).drive(\"3v\");\n\n    this.uart = this.obniz.getFreeUart();\n  }\n\n  public async _drainUntil(uart: any, search: any, recv?: any) {\n    if (!recv) {\n      recv = [];\n    }\n    while (true) {\n      const readed: any = uart.readBytes();\n      recv = recv.concat(readed);\n      const tail: any = this._seekTail(search, recv);\n      if (tail >= 0) {\n        recv.splice(0, tail);\n        return recv;\n      }\n      await this.obniz.wait(10);\n    }\n  }\n\n  public _seekTail(search: any, src: any) {\n    let f: any = 0;\n    for (let i = 0; i < src.length; i++) {\n      if (src[i] === search[f]) {\n        f++;\n        if (f === search.length) {\n          return i + 1;\n        }\n      } else {\n        f = 0;\n      }\n    }\n    return -1;\n  }\n\n  public arrayToBase64(array: any) {\n    return Buffer.from(array).toString(\"base64\");\n  }\n\n  public async startWait(obj: any) {\n    if (!obj) {\n      obj = {};\n    }\n    this.uart.start({\n      tx: this.my_tx,\n      rx: this.my_rx,\n      baud: obj.baud || 38400,\n    });\n    this.obniz.display.setPinName(this.my_tx, \"JpegSerialCam\", \"camRx\");\n    this.obniz.display.setPinName(this.my_rx, \"JpegSerialCam\", \"camTx\");\n    await this.obniz.wait(2500);\n  }\n\n  public async resetwait() {\n    this.uart.send([0x56, 0x00, 0x26, 0x00]);\n    await this._drainUntil(this.uart, [0x76, 0x00, 0x26, 0x00]);\n    await this.obniz.wait(2500);\n  }\n\n  public async setSizeWait(resolution: any) {\n    let val: any;\n    if (resolution === \"640x480\") {\n      val = 0x00;\n    } else if (resolution === \"320x240\") {\n      val = 0x11;\n    } else if (resolution === \"160x120\") {\n      val = 0x22;\n    } else {\n      throw new Error(\"unsupported size\");\n    }\n    this.uart.send([0x56, 0x00, 0x31, 0x05, 0x04, 0x01, 0x00, 0x19, val]);\n    await this._drainUntil(this.uart, [0x76, 0x00, 0x31, 0x00]);\n    await this.resetwait();\n  }\n\n  public async setCompressibilityWait(compress: any) {\n    const val: any = Math.floor((compress / 100) * 0xff);\n    this.uart.send([0x56, 0x00, 0x31, 0x05, 0x01, 0x01, 0x12, 0x04, val]);\n    await this._drainUntil(this.uart, [0x76, 0x00, 0x31, 0x00]);\n    await this.resetwait();\n  }\n\n  public async setBaudWait(baud: any) {\n    let val: any;\n    switch (baud) {\n      case 9600:\n        val = [0xae, 0xc8];\n        break;\n      case 19200:\n        val = [0x56, 0xe4];\n        break;\n      case 38400:\n        val = [0x2a, 0xf2];\n        break;\n      case 57600:\n        val = [0x1c, 0x4c];\n        break;\n      case 115200:\n        val = [0x0d, 0xa6];\n        break;\n      default:\n        throw new Error(\"invalid baud rate\");\n    }\n    this.uart.send([\n      0x56,\n      0x00,\n      0x31,\n      0x06,\n      0x04,\n      0x02,\n      0x00,\n      0x08,\n      val[0],\n      val[1],\n    ]);\n    await this._drainUntil(this.uart, [0x76, 0x00, 0x31, 0x00]);\n    // await this.obniz.wait(1000);\n    await this.startWait({\n      baud,\n    });\n  }\n\n  public async takeWait() {\n    const uart: any = this.uart;\n    // console.log(\"stop a photo\")\n    uart.send([0x56, 0x00, 0x36, 0x01, 0x02]);\n    await this._drainUntil(uart, [0x76, 0x00, 0x36, 0x00, 0x00]);\n\n    // console.log(\"take a photo\")\n    uart.send([0x56, 0x00, 0x36, 0x01, 0x00]);\n    await this._drainUntil(uart, [0x76, 0x00, 0x36, 0x00, 0x00]);\n\n    // console.log(\"read length\")\n    uart.send([0x56, 0x00, 0x34, 0x01, 0x00]); // read length of image data\n    let recv: any = await this._drainUntil(uart, [\n      0x76,\n      0x00,\n      0x34,\n      0x00,\n      0x04,\n      0x00,\n      0x00,\n    ]); // ack\n    let XX: any;\n    let YY: any;\n    while (true) {\n      const readed: any = uart.readBytes();\n      // console.log(recv);\n      recv = recv.concat(readed);\n      if (recv.length >= 2) {\n        XX = recv[0];\n        YY = recv[1];\n        break;\n      }\n      await this.obniz.wait(1000);\n    }\n    const databytes: any = XX * 256 + YY;\n    // console.log(\"image: \" + databytes + \" Bytes\");\n    // const high = (databytes >> 8) & 0xff;\n    // const low = databytes & 0xff;\n\n    // console.log(\"start reading image\")\n    uart.send([\n      0x56,\n      0x00,\n      0x32,\n      0x0c,\n      0x00,\n      0x0a,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      0x00,\n      XX,\n      YY,\n      0x00,\n      0xff,\n    ]);\n    recv = await this._drainUntil(uart, [0x76, 0x00, 0x32, 0x00, 0x00]);\n    // console.log(\"reading...\");\n    while (true) {\n      const readed: any = uart.readBytes();\n      recv = recv.concat(readed);\n      // console.log(readed.length);\n      if (recv.length >= databytes) {\n        break;\n      }\n      await this.obniz.wait(10);\n    }\n    // console.log(\"done\");\n    recv = recv.splice(0, databytes); // remove tail\n    recv = recv.concat([0xff, 0xd9]);\n    return recv;\n  }\n}\n\nexport default JpegSerialCam;\n"]}