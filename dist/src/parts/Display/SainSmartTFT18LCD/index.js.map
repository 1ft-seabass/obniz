{"version":3,"sources":["../src/parts/Display/SainSmartTFT18LCD/index.ts"],"names":[],"mappings":"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IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;CACL,CAAC","file":"index.js","sourcesContent":["// SainSmart ST7735 1.8\" TFT LCD 128x160 pixel\nclass SainSmartTFT18LCD {\n\n  public static info() {\n    return {\n      name: \"SainSmartTFT18LCD\",\n    };\n  }\n\n  public keys: any;\n  public required: any;\n  public displayIoNames: any;\n  public debugprint: any;\n  public obniz: any;\n  public io_dc: any;\n  public params: any;\n  public io_res: any;\n  public io_cs: any;\n  public spi: any;\n  public width: any;\n  public height: any;\n  public writeBuffer: any;\n  public color: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"scl\", \"sda\", \"dc\", \"res\", \"cs\"];\n    this.required = [\"scl\", \"sda\", \"dc\", \"res\", \"cs\"];\n\n    this.displayIoNames = {\n      vcc: \"vcc\",\n      gnd: \"gnd\",\n      scl: \"scl\",\n      sda: \"sda\",\n      dc: \"dc\",\n      res: \"res\",\n      cs: \"cs\",\n    };\n  }\n\n  public wired(obniz: any) {\n    this.debugprint = false;\n    this.obniz = obniz;\n    this.io_dc = obniz.getIO(this.params.dc);\n    this.io_res = obniz.getIO(this.params.res);\n    this.io_cs = obniz.getIO(this.params.cs);\n\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.params.frequency = 16 * 1000 * 1000; // 16MHz\n    this.params.mode = \"master\";\n    this.params.clk = this.params.scl;\n    this.params.mosi = this.params.sda;\n    this.params.drive = \"3v\";\n    this.spi = this.obniz.getSpiWithConfig(this.params);\n\n    this.io_dc.output(true);\n    this.io_cs.output(false);\n\n    this.width = ST7735_TFTWIDTH;\n    this.height = ST7735_TFTHEIGHT;\n\n    this.writeBuffer = []; // 1024bytes bufferring\n\n    this._setPresetColor();\n    this.init();\n  }\n\n  public print_debug(v: any) {\n    if (this.debugprint) {\n      console.log(\n        \"SainSmartTFT18LCD: \" + Array.prototype.slice.call(arguments).join(\"\"),\n      );\n    }\n  }\n\n  public _deadSleep(waitMsec: any) {\n    const startMsec: any = new Date();\n    while ((new Date() as any) - startMsec < waitMsec) {\n    }\n  }\n\n  public _reset() {\n    this.io_res.output(false);\n    this._deadSleep(10);\n    this.io_res.output(true);\n    this._deadSleep(10);\n  }\n\n  public writeCommand(cmd: any) {\n    this.io_dc.output(false);\n    this.io_cs.output(false);\n    this.spi.write([cmd]);\n    this.io_cs.output(true);\n  }\n\n  public writeData(data: any) {\n    this.io_dc.output(true);\n    this.io_cs.output(false);\n    this.spi.write(data);\n    this.io_cs.output(true);\n  }\n\n  public write(cmd: any, data: any) {\n    if (data.length === 0) {\n      return;\n    }\n    this.writeCommand(cmd);\n    this.writeData(data);\n  }\n\n  public async asyncwait() {\n    return await this.spi.writeWait([0x00]);\n  }\n\n  public _writeFlush() {\n    while (this.writeBuffer.length > 0) {\n      if (this.writeBuffer.length > 1024) {\n        const data: any = this.writeBuffer.slice(0, 1024);\n        this.writeData(data);\n        this.writeBuffer.splice(0, 1024);\n      } else {\n        if (this.writeBuffer.length > 0) {\n          this.writeData(this.writeBuffer);\n        }\n        this.writeBuffer = [];\n      }\n    }\n  }\n\n  public _writeBuffer(data?: any) {\n    if (data && data.length > 0) {\n      this.writeBuffer = this.writeBuffer.concat(data);\n    } else {\n      this._writeFlush();\n    }\n  }\n\n  public color16(r: any, g: any, b: any) {\n    //  1st byte  (r & 0xF8 | g >> 5)\n    //  2nd byte  (g & 0xFC << 3 | b >> 3)\n    return ((r & 0xf8) << 8) | ((g & 0xfc) << 3) | (b >> 3);\n  }\n\n  public _initG() {\n    // initialize for Green Tab\n    this.writeCommand(ST7735_SLPOUT); // Sleep out & booster on\n    this.obniz.wait(120);\n    this.write(ST7735_FRMCTR1, [0x01, 0x2c, 0x2d]);\n    this.write(ST7735_FRMCTR2, [0x01, 0x2c, 0x2d]);\n    this.write(ST7735_FRMCTR3, [0x01, 0x2c, 0x2d, 0x01, 0x2c, 0x2d]);\n    this.write(ST7735_INVCTR, [0x07]);\n    this.write(ST7735_PWCTR1, [0xa2, 0x02, 0x84]);\n    this.write(ST7735_PWCTR2, [0xc5]);\n    this.write(ST7735_PWCTR3, [0x0a, 0x00]);\n    this.write(ST7735_PWCTR4, [0x8a, 0x2a]);\n    this.write(ST7735_PWCTR5, [0x8a, 0xee]);\n    this.write(ST7735_VMCTR1, [0x0e]);\n    this.write(ST7735_GMCTRP1, [\n      0x02,\n      0x1c,\n      0x07,\n      0x12,\n      0x37,\n      0x32,\n      0x29,\n      0x2d,\n      0x29,\n      0x25,\n      0x2b,\n      0x39,\n      0x00,\n      0x01,\n      0x03,\n      0x10,\n    ]);\n    this.write(ST7735_GMCTRN1, [\n      0x03,\n      0x1d,\n      0x07,\n      0x06,\n      0x2e,\n      0x2c,\n      0x29,\n      0x2d,\n      0x2e,\n      0x2e,\n      0x37,\n      0x3f,\n      0x00,\n      0x00,\n      0x02,\n      0x10,\n    ]);\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // color format: 16bit/pixel\n  }\n\n  public init() {\n    this._reset();\n    this._initG();\n    this.setDisplayOn();\n    this.setRotation(0);\n  }\n\n  public setDisplayOn() {\n    this.writeCommand(ST7735_DISPON);\n  }\n\n  public setDisplayOff() {\n    this.writeCommand(ST7735_DISPOFF);\n  }\n\n  public setDisplay(on: any) {\n    if (on === true) {\n      this.setDisplayOn();\n    } else {\n      this.setDisplayOff();\n    }\n  }\n\n  public setInversionOn() {\n    this.writeCommand(ST7735_INVON);\n  }\n\n  public setInversionOff() {\n    this.writeCommand(ST7735_INVOFF);\n  }\n\n  public setInversion(inversion: any) {\n    if (inversion === true) {\n      this.setInversionOn();\n    } else {\n      this.setInversionOff();\n    }\n  }\n\n  public setRotation(m: any) {\n    const MADCTL_MY: any = 0x80;\n    const MADCTL_MX: any = 0x40;\n    const MADCTL_MV: any = 0x20;\n    // const MADCTL_ML = 0x10;\n    const MADCTL_RGB: any = 0x00; // always RGB, never BGR\n    // const MADCTL_MH = 0x04;\n\n    let data: any;\n    const rotation: any = m % 4; // can't be higher than 3\n    switch (rotation) {\n      case 0:\n        data = [MADCTL_MX | MADCTL_MY | MADCTL_RGB];\n        this.width = ST7735_TFTWIDTH;\n        this.height = ST7735_TFTHEIGHT;\n        break;\n      case 1:\n        data = [MADCTL_MY | MADCTL_MV | MADCTL_RGB];\n        this.width = ST7735_TFTHEIGHT;\n        this.height = ST7735_TFTWIDTH;\n        break;\n      case 2:\n        data = [MADCTL_RGB];\n        this.width = ST7735_TFTWIDTH;\n        this.height = ST7735_TFTHEIGHT;\n        break;\n      case 3:\n        data = [MADCTL_MX | MADCTL_MV | MADCTL_RGB];\n        this.width = ST7735_TFTHEIGHT;\n        this.height = ST7735_TFTWIDTH;\n        break;\n    }\n    this.write(ST7735_MADCTL, data);\n    this.setAddrWindow(0, 0, this.width - 1, this.height - 1);\n  }\n\n  public setAddrWindow(x0: any, y0: any, x1: any, y1: any) {\n    this.print_debug(\n      `setAddrWindow: (x0: ${x0}, y0: ${y0}) - (x1: ${x1}, y1: ${y1})`,\n    );\n\n    if (x0 < 0) {\n      x0 = 0;\n    }\n    if (y0 < 0) {\n      y0 = 0;\n    }\n    if (x1 < 0) {\n      x1 = 0;\n    }\n    if (y1 < 0) {\n      y1 = 0;\n    }\n\n    // column addr set\n    this.write(ST7735_CASET, [0x00, x0, 0x00, x1]); // XSTART-XEND\n    // row addr set\n    this.write(ST7735_RASET, [0x00, y0, 0x00, y1]); // YSTART-YEND\n    // write to RAM\n    this.writeCommand(ST7735_RAMWR);\n    this.writeBuffer = [];\n  }\n\n  // __swap(a, b) { let t = a; a = b; b = t; }\n\n  public fillScreen(color: any) {\n    this.fillRect(0, 0, this.width, this.height, color);\n  }\n\n  public fillRect(x: any, y: any, w: any, h: any, color: any) {\n    if (x >= this.width || y >= this.height) {\n      return;\n    }\n    if (x + w - 1 >= this.width) {\n      w = this.width - x;\n    }\n    if (y + h - 1 >= this.height) {\n      h = this.height - y;\n    }\n\n    this.setAddrWindow(x, y, x + w - 1, y + h - 1);\n\n    const hi: any = color >> 8;\n    const lo: any = color & 0xff;\n    const data: any = [];\n\n    for (y = h; y > 0; y--) {\n      for (x = w; x > 0; x--) {\n        data.push(hi);\n        data.push(lo);\n      }\n    }\n    this._writeBuffer(data);\n    this._writeBuffer(); // for flush\n  }\n\n  public drawRect(x: any, y: any, w: any, h: any, color: any) {\n    this.drawHLine(x, y, w, color);\n    this.drawHLine(x, y + h - 1, w, color);\n    this.drawVLine(x, y, h, color);\n    this.drawVLine(x + w - 1, y, h, color);\n  }\n\n  public drawCircle(x0: any, y0: any, r: any, color: any) {\n    let f: any = 1 - r;\n    let ddF_x: any = 1;\n    let ddF_y: any = -2 * r;\n    let x: any = 0;\n    let y: any = r;\n\n    this.drawPixel(x0, y0 + r, color);\n    this.drawPixel(x0, y0 - r, color);\n    this.drawPixel(x0 + r, y0, color);\n    this.drawPixel(x0 - r, y0, color);\n\n    while (x < y) {\n      if (f >= 0) {\n        y--;\n        ddF_y += 2;\n        f += ddF_y;\n      }\n      x++;\n      ddF_x += 2;\n      f += ddF_x;\n\n      this.drawPixel(x0 + x, y0 + y, color);\n      this.drawPixel(x0 - x, y0 + y, color);\n      this.drawPixel(x0 + x, y0 - y, color);\n      this.drawPixel(x0 - x, y0 - y, color);\n      this.drawPixel(x0 + y, y0 + x, color);\n      this.drawPixel(x0 - y, y0 + x, color);\n      this.drawPixel(x0 + y, y0 - x, color);\n      this.drawPixel(x0 - y, y0 - x, color);\n    }\n  }\n\n  public _drawCircleHelper(x0: any, y0: any, r: any, cornername: any, color: any) {\n    let f: any = 1 - r;\n    let ddF_x: any = 1;\n    let ddF_y: any = -2 * r;\n    let x: any = 0;\n    let y: any = r;\n\n    while (x < y) {\n      if (f >= 0) {\n        y--;\n        ddF_y += 2;\n        f += ddF_y;\n      }\n      x++;\n      ddF_x += 2;\n      f += ddF_x;\n      if (cornername & 0x4) {\n        this.drawPixel(x0 + x, y0 + y, color);\n        this.drawPixel(x0 + y, y0 + x, color);\n      }\n      if (cornername & 0x2) {\n        this.drawPixel(x0 + x, y0 - y, color);\n        this.drawPixel(x0 + y, y0 - x, color);\n      }\n      if (cornername & 0x8) {\n        this.drawPixel(x0 - y, y0 + x, color);\n        this.drawPixel(x0 - x, y0 + y, color);\n      }\n      if (cornername & 0x1) {\n        this.drawPixel(x0 - y, y0 - x, color);\n        this.drawPixel(x0 - x, y0 - y, color);\n      }\n    }\n  }\n\n  public fillCircle(x0: any, y0: any, r: any, color: any) {\n    this.drawVLine(x0, y0 - r, 2 * r + 1, color);\n    this._fillCircleHelper(x0, y0, r, 3, 0, color);\n  }\n\n  public _fillCircleHelper(x0: any, y0: any, r: any, cornername: any, delta: any, color: any) {\n    let f: any = 1 - r;\n    let ddF_x: any = 1;\n    let ddF_y: any = -2 * r;\n    let x: any = 0;\n    let y: any = r;\n\n    while (x < y) {\n      if (f >= 0) {\n        y--;\n        ddF_y += 2;\n        f += ddF_y;\n      }\n      x++;\n      ddF_x += 2;\n      f += ddF_x;\n\n      if (cornername & 0x1) {\n        this.drawVLine(x0 + x, y0 - y, 2 * y + 1 + delta, color);\n        this.drawVLine(x0 + y, y0 - x, 2 * x + 1 + delta, color);\n      }\n      if (cornername & 0x2) {\n        this.drawVLine(x0 - x, y0 - y, 2 * y + 1 + delta, color);\n        this.drawVLine(x0 - y, y0 - x, 2 * x + 1 + delta, color);\n      }\n    }\n  }\n\n  public drawRoundRect(x: any, y: any, w: any, h: any, r: any, color: any) {\n    this.drawHLine(x + r, y, w - 2 * r, color); // Top\n    this.drawHLine(x + r, y + h - 1, w - 2 * r, color); // Bottom\n    this.drawVLine(x, y + r, h - 2 * r, color); // Left\n    this.drawVLine(x + w - 1, y + r, h - 2 * r, color); // Right\n\n    this._drawCircleHelper(x + r, y + r, r, 1, color);\n    this._drawCircleHelper(x + w - r - 1, y + r, r, 2, color);\n    this._drawCircleHelper(x + w - r - 1, y + h - r - 1, r, 4, color);\n    this._drawCircleHelper(x + r, y + h - r - 1, r, 8, color);\n  }\n\n  public fillRoundRect(x: any, y: any, w: any, h: any, r: any, color: any) {\n    this.fillRect(x + r, y, w - 2 * r, h, color);\n\n    this._fillCircleHelper(x + w - r - 1, y + r, r, 1, h - 2 * r - 1, color);\n    this._fillCircleHelper(x + r, y + r, r, 2, h - 2 * r - 1, color);\n  }\n\n  public drawTriangle(x0: any, y0: any, x1: any, y1: any, x2: any, y2: any, color: any) {\n    this.drawLine(x0, y0, x1, y1, color);\n    this.drawLine(x1, y1, x2, y2, color);\n    this.drawLine(x2, y2, x0, y0, color);\n  }\n\n  public fillTriangle(x0: any, y0: any, x1: any, y1: any, x2: any, y2: any, color: any) {\n    let a: any;\n    let b: any;\n    let y: any;\n    let last: any;\n\n    // Sort coordinates by Y order (y2 >= y1 >= y0)\n    if (y0 > y1) {\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\n    }\n    if (y1 > y2) {\n      y2 = [y1, (y1 = y2)][0]; // this._swap(y2, y1);\n      x2 = [x1, (x1 = x2)][0]; // this._swap(x2, x1);\n    }\n    if (y0 > y1) {\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\n    }\n\n    if (y0 === y2) {\n      // Handle awkward all-on-same-line case as its own thing\n      a = b = x0;\n      if (x1 < a) {\n        a = x1;\n      } else if (x1 > b) {\n        b = x1;\n      }\n      if (x2 < a) {\n        a = x2;\n      } else if (x2 > b) {\n        b = x2;\n      }\n      this.drawHLine(a, y0, b - a + 1, color);\n      return;\n    }\n\n    const dx01: any = x1 - x0;\n    const dy01: any = y1 - y0;\n    const dx02: any = x2 - x0;\n    const dy02: any = y2 - y0;\n    const dx12: any = x2 - x1;\n    const dy12: any = y2 - y1;\n    let sa: any = 0;\n    let sb: any = 0;\n\n    if (y1 === y2) {\n      last = y1;\n    } else {\n      last = y1 - 1;\n    } // skip it\n\n    for (y = y0; y <= last; y++) {\n      a = x0 + Math.floor(sa / dy01);\n      b = x0 + Math.floor(sb / dy02);\n      sa += dx01;\n      sb += dx02;\n      if (a > b) {\n        b = [a, (a = b)][0];\n      } // this._swap(a,b);\n      this.drawHLine(a, y, b - a + 1, color);\n    }\n\n    sa = dx12 * (y - y1);\n    sb = dx02 * (y - y0);\n    for (; y <= y2; y++) {\n      a = x1 + Math.floor(sa / dy12);\n      b = x0 + Math.floor(sb / dy02);\n      sa += dx12;\n      sb += dx02;\n      if (a > b) {\n        b = [a, (a = b)][0];\n      } // this._swap(a,b);\n      this.drawHLine(a, y, b - a + 1, color);\n    }\n  }\n\n  public drawVLine(x: any, y: any, h: any, color: any) {\n    if (x >= this.width || y >= this.height) {\n      return;\n    }\n    if (y + h - 1 >= this.height) {\n      h = this.height - y;\n    }\n\n    this.setAddrWindow(x, y, x, y + h - 1);\n\n    const hi: any = color >> 8;\n    const lo: any = color & 0xff;\n    const data: any = [];\n    while (h--) {\n      data.push(hi);\n      data.push(lo);\n    }\n    this.writeData(data);\n  }\n\n  public drawHLine(x: any, y: any, w: any, color: any) {\n    if (x >= this.width || y >= this.height) {\n      return;\n    }\n    if (x + w - 1 >= this.width) {\n      w = this.width - x;\n    }\n\n    this.setAddrWindow(x, y, x + w - 1, y);\n\n    const hi: any = color >> 8; const lo: any = color & 0xff;\n    const data: any = [];\n    while (w--) {\n      data.push(hi);\n      data.push(lo);\n    }\n    this.writeData(data);\n  }\n\n  public drawLine(x0: any, y0: any, x1: any, y1: any, color: any) {\n    const step: any = Math.abs(y1 - y0) > Math.abs(x1 - x0);\n    if (step) {\n      y0 = [x0, (x0 = y0)][0]; // this._swap(x0, y0);\n      y1 = [x1, (x1 = y1)][0]; // this._swap(x1, y1);\n    }\n    if (x0 > x1) {\n      x1 = [x0, (x0 = x1)][0]; // this._swap(x0, x1);\n      y1 = [y0, (y0 = y1)][0]; // this._swap(y0, y1);\n    }\n\n    const dx: any = x1 - x0;\n    const dy: any = Math.abs(y1 - y0);\n\n    let err: any = dx / 2;\n    const ystep: any = y0 < y1 ? 1 : -1;\n\n    for (; x0 <= x1; x0++) {\n      if (step) {\n        this.drawPixel(y0, x0, color);\n      } else {\n        this.drawPixel(x0, y0, color);\n      }\n      err -= dy;\n      if (err < 0) {\n        y0 += ystep;\n        err += dx;\n      }\n    }\n  }\n\n  public drawPixel(x: any, y: any, color: any) {\n    if (x < 0 || x >= this.width || y < 0 || y >= this.height) {\n      return;\n    }\n\n    this.setAddrWindow(x, y, x + 1, y + 1);\n    this.writeData([color >> 8, color & 0xff]);\n  }\n\n  public drawChar(x: any, y: any, ch: any, color: any, bg: any, size: any) {\n    //  bg = bg || color;\n    size = size || 1;\n    if (\n      x >= this.width || // Clip right\n      y >= this.height || // Clip bottom\n      x + 6 * size - 1 < 0 || // Clip left\n      y + 8 * size - 1 < 0\n    ) {\n      // Clip top\n      return;\n    }\n\n    if (color !== bg) {\n      this.drawChar2(x, y, ch, color, bg, size);\n      return;\n    }\n\n    const c: any = ch.charCodeAt(0);\n    for (let i = 0; i < 6; i++) {\n      let line: any = i === 5 ? 0 : font[c * 5 + i];\n      for (let j = 0; j < 8; j++) {\n        if (line & 0x1) {\n          if (size === 1) {\n            // default size\n            this.drawPixel(x + i, y + j, color);\n          } else {\n            // big size\n            this.fillRect(x + i * size, y + j * size, size, size, color);\n          }\n        } else if (bg !== color) {\n          if (size === 1) {\n            // default size\n            this.drawPixel(x + i, y + j, bg);\n          } else {\n            // big size\n            this.fillRect(x + i * size, y + j * size, size, size, bg);\n          }\n        }\n        line >>= 1;\n      }\n    }\n  }\n\n  public drawChar2(x: any, y: any, ch: any, color: any, bg: any, size: any) {\n    //  bg = bg || color;\n    size = size || 1;\n    if (\n      x >= this.width || // Clip right\n      y >= this.height || // Clip bottom\n      x + 6 * size - 1 < 0 || // Clip left\n      y + 8 * size - 1 < 0 // Clip top\n    ) {\n      return;\n    }\n\n    const pixels: any = new Array(6 * 8 * size * size);\n    const c: any = ch.charCodeAt(0);\n    for (let i = 0; i < 6; i++) {\n      let line: any = i === 5 ? 0 : font[c * 5 + i];\n      for (let j = 0; j < 8; j++) {\n        const cl: any = line & 0x1 ? color : bg;\n        for (let w = 0; w < size; w++) {\n          for (let h = 0; h < size; h++) {\n            pixels[\n            i * (1 * size) + w + (j * (6 * size * size) + h * (6 * size))\n              ] = cl;\n          }\n        }\n        line >>= 1;\n      }\n    }\n    this.rawBound16(x, y, 6 * size, 8 * size, pixels);\n  }\n\n  public rawBound16(x: any, y: any, width: any, height: any, pixels: any) {\n    const rgb: any = [];\n    pixels.forEach((v: any) => {\n      rgb.push((v & 0xff00) >> 8);\n      rgb.push(v & 0xff);\n    });\n    this.setAddrWindow(x, y, x + width - 1, y + height - 1);\n    this._writeBuffer(rgb);\n    this._writeBuffer(); // for flush\n  }\n\n  public drawString(x: any, y: any, str: any, color: any, bg: any, size: any, wrap: any) {\n    //  bg = bg || color;\n    size = size || 1;\n    //  wrap = wrap || true;\n    for (let n = 0; n < str.length; n++) {\n      const c: any = str.charAt(n);\n      if (c === \"\\n\") {\n        y += size * 8;\n        x = 0;\n      } else if (c === \"\\r\") {\n        // skip em\n      } else {\n        this.drawChar(x, y, c, color, bg, size);\n        x += size * 6;\n        if (wrap && x > this.width - size * 6) {\n          y += size * 8;\n          x = 0;\n        }\n      }\n    }\n    return [x, y];\n  }\n\n  public drawContextBound(context: any, x0: any, y0: any, width: any, height: any, x1: any, y1: any, gray: any) {\n    x0 = x0 || 0;\n    y0 = y0 || 0;\n    width = width || context.canvas.clientWidth;\n    height = height || context.canvas.clientHeight;\n    x1 = x1 || 0;\n    y1 = y1 || 0;\n    gray = gray || false;\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\n    const imageData: any = context.getImageData(x0, y0, width, height).data;\n    const rgb: any = [];\n    for (let n = 0; n < imageData.length; n += 4) {\n      const r: any = imageData[n + 0];\n      const g: any = imageData[n + 1];\n      const b: any = imageData[n + 2];\n      if (!gray) {\n        rgb.push(r);\n        rgb.push(g);\n        rgb.push(b);\n      } else {\n        const gs: any = Math.round(0.299 * r + 0.587 * g + 0.114 * b);\n        rgb.push(gs);\n        rgb.push(gs);\n        rgb.push(gs);\n      }\n    }\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\n    this.setAddrWindow(x1, y1, x1 + width - 1, y1 + height - 1);\n    this._writeBuffer(rgb);\n    this._writeBuffer(); // for flush\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // 16bit/pixel\n  }\n\n  public drawContext(context: any, gray: any) {\n    gray = gray || false;\n    this.drawContextBound(context, 0, 0, this.width, this.height, 0, 0, gray);\n  }\n\n  public rawBound(x: any, y: any, width: any, height: any, pixels: any) {\n    const rgb: any = [];\n    pixels.forEach((v: number) => {\n      rgb.push((v & 0xff0000) >> 16);\n      rgb.push((v & 0xff00) >> 8);\n      rgb.push(v & 0xff);\n    });\n    this.write(ST7735_COLMOD, [ST7735_18bit]); // 18bit/pixel\n    this.setAddrWindow(x, y, x + width - 1, y + height - 1);\n    this._writeBuffer(rgb);\n    this._writeBuffer(); // for flush\n    this.write(ST7735_COLMOD, [ST7735_16bit]); // 16bit/pixel\n  }\n\n  public raw(pixels: any) {\n    this.rawBound(0, 0, this.width, this.height, pixels);\n  }\n\n  public _setPresetColor() {\n    this.color = {\n      AliceBlue: 0xf7df,\n      AntiqueWhite: 0xff5a,\n      Aqua: 0x07ff,\n      Aquamarine: 0x7ffa,\n      Azure: 0xf7ff,\n      Beige: 0xf7bb,\n      Bisque: 0xff38,\n      Black: 0x0000,\n      BlanchedAlmond: 0xff59,\n      Blue: 0x001f,\n      BlueViolet: 0x895c,\n      Brown: 0xa145,\n      BurlyWood: 0xddd0,\n      CadetBlue: 0x5cf4,\n      Chartreuse: 0x7fe0,\n      Chocolate: 0xd343,\n      Coral: 0xfbea,\n      CornflowerBlue: 0x64bd,\n      Cornsilk: 0xffdb,\n      Crimson: 0xd8a7,\n      Cyan: 0x07ff,\n      DarkBlue: 0x0011,\n      DarkCyan: 0x0451,\n      DarkGoldenRod: 0xbc21,\n      DarkGray: 0xad55,\n      DarkGreen: 0x0320,\n      DarkKhaki: 0xbdad,\n      DarkMagenta: 0x8811,\n      DarkOliveGreen: 0x5345,\n      DarkOrange: 0xfc60,\n      DarkOrchid: 0x9999,\n      DarkRed: 0x8800,\n      DarkSalmon: 0xecaf,\n      DarkSeaGreen: 0x8df1,\n      DarkSlateBlue: 0x49f1,\n      DarkSlateGray: 0x2a69,\n      DarkTurquoise: 0x067a,\n      DarkViolet: 0x901a,\n      DeepPink: 0xf8b2,\n      DeepSkyBlue: 0x05ff,\n      DimGray: 0x6b4d,\n      DodgerBlue: 0x1c9f,\n      FireBrick: 0xb104,\n      FloralWhite: 0xffde,\n      ForestGreen: 0x2444,\n      Fuchsia: 0xf81f,\n      Gainsboro: 0xdefb,\n      GhostWhite: 0xffdf,\n      Gold: 0xfea0,\n      GoldenRod: 0xdd24,\n      Gray: 0x8410,\n      Green: 0x0400,\n      GreenYellow: 0xafe5,\n      HoneyDew: 0xf7fe,\n      HotPink: 0xfb56,\n      IndianRed: 0xcaeb,\n      Indigo: 0x4810,\n      Ivory: 0xfffe,\n      Khaki: 0xf731,\n      Lavender: 0xe73f,\n      LavenderBlush: 0xff9e,\n      LawnGreen: 0x7fe0,\n      LemonChiffon: 0xffd9,\n      LightBlue: 0xaedc,\n      LightCoral: 0xf410,\n      LightCyan: 0xe7ff,\n      LightGoldenRodYellow: 0xffda,\n      LightGray: 0xd69a,\n      LightGreen: 0x9772,\n      LightPink: 0xfdb8,\n      LightSalmon: 0xfd0f,\n      LightSeaGreen: 0x2595,\n      LightSkyBlue: 0x867f,\n      LightSlateGray: 0x7453,\n      LightSteelBlue: 0xb63b,\n      LightYellow: 0xfffc,\n      Lime: 0x07e0,\n      LimeGreen: 0x3666,\n      Linen: 0xff9c,\n      Magenta: 0xf81f,\n      Maroon: 0x8000,\n      MediumAquaMarine: 0x6675,\n      MediumBlue: 0x0019,\n      MediumOrchid: 0xbaba,\n      MediumPurple: 0x939b,\n      MediumSeaGreen: 0x3d8e,\n      MediumSlateBlue: 0x7b5d,\n      MediumSpringGreen: 0x07d3,\n      MediumTurquoise: 0x4e99,\n      MediumVioletRed: 0xc0b0,\n      MidnightBlue: 0x18ce,\n      MintCream: 0xf7ff,\n      MistyRose: 0xff3c,\n      Moccasin: 0xff36,\n      NavajoWhite: 0xfef5,\n      Navy: 0x0010,\n      OldLace: 0xffbc,\n      Olive: 0x8400,\n      OliveDrab: 0x6c64,\n      Orange: 0xfd20,\n      OrangeRed: 0xfa20,\n      Orchid: 0xdb9a,\n      PaleGoldenRod: 0xef55,\n      PaleGreen: 0x9fd3,\n      PaleTurquoise: 0xaf7d,\n      PaleVioletRed: 0xdb92,\n      PapayaWhip: 0xff7a,\n      PeachPuff: 0xfed7,\n      Peru: 0xcc27,\n      Pink: 0xfe19,\n      Plum: 0xdd1b,\n      PowderBlue: 0xb71c,\n      Purple: 0x8010,\n      RebeccaPurple: 0x6193,\n      Red: 0xf800,\n      RosyBrown: 0xbc71,\n      RoyalBlue: 0x435c,\n      SaddleBrown: 0x8a22,\n      Salmon: 0xfc0e,\n      SandyBrown: 0xf52c,\n      SeaGreen: 0x2c4a,\n      SeaShell: 0xffbd,\n      Sienna: 0xa285,\n      Silver: 0xc618,\n      SkyBlue: 0x867d,\n      SlateBlue: 0x6ad9,\n      SlateGray: 0x7412,\n      Snow: 0xffdf,\n      SpringGreen: 0x07ef,\n      SteelBlue: 0x4416,\n      Tan: 0xd5b1,\n      Teal: 0x0410,\n      Thistle: 0xddfb,\n      Tomato: 0xfb08,\n      Turquoise: 0x471a,\n      Violet: 0xec1d,\n      Wheat: 0xf6f6,\n      White: 0xffff,\n      WhiteSmoke: 0xf7be,\n      Yellow: 0xffe0,\n      YellowGreen: 0x9e66,\n    };\n  }\n}\n\nexport default SainSmartTFT18LCD;\n\n// ----------------------------------------------------------\n\n// commands\n// const INITR_GREENTAB = 0x0;\n// const INITR_REDTAB = 0x1;\n// const INITR_BLACKTAB = 0x2;\n\nconst ST7735_TFTWIDTH: any = 128;\nconst ST7735_TFTHEIGHT: any = 160;\n\n// const ST7735_NOP = 0x00;\n// const ST7735_SWRESET = 0x01;\n// const ST7735_RDDID = 0x04;\n// const ST7735_RDDST = 0x09;\n// const ST7735_RDDPM = 0x0a;\n\n// const ST7735_SLPIN = 0x10;\nconst ST7735_SLPOUT: any = 0x11;\n// const ST7735_PTLON = 0x12;\n// const ST7735_NORON = 0x13;\n\nconst ST7735_INVOFF: any = 0x20;\nconst ST7735_INVON: any = 0x21;\nconst ST7735_DISPOFF: any = 0x28;\nconst ST7735_DISPON: any = 0x29;\nconst ST7735_CASET: any = 0x2a;\nconst ST7735_RASET: any = 0x2b;\nconst ST7735_RAMWR: any = 0x2c;\n// const ST7735_RAMRD = 0x2e;\n\n// const ST7735_PTLAR = 0x30;\nconst ST7735_COLMOD: any = 0x3a;\nconst ST7735_MADCTL: any = 0x36;\n\nconst ST7735_FRMCTR1: any = 0xb1;\nconst ST7735_FRMCTR2: any = 0xb2;\nconst ST7735_FRMCTR3: any = 0xb3;\nconst ST7735_INVCTR: any = 0xb4;\n// const ST7735_DISSET5 = 0xb6;\n\nconst ST7735_PWCTR1: any = 0xc0;\nconst ST7735_PWCTR2: any = 0xc1;\nconst ST7735_PWCTR3: any = 0xc2;\nconst ST7735_PWCTR4: any = 0xc3;\nconst ST7735_PWCTR5: any = 0xc4;\nconst ST7735_VMCTR1: any = 0xc5;\n\n// const ST7735_RDID1 = 0xda;\n// const ST7735_RDID2 = 0xdb;\n// const ST7735_RDID3 = 0xdc;\n// const ST7735_RDID4 = 0xdd;\n\n// const ST7735_PWCTR6 = 0xfc;\n\nconst ST7735_GMCTRP1: any = 0xe0;\nconst ST7735_GMCTRN1: any = 0xe1;\n\n// Color definitions\n// const ST7735_BLACK = 0x0000;\n// const ST7735_BLUE = 0x001f;\n// const ST7735_RED = 0xf800;\n// const ST7735_GREEN = 0x07e0;\n// const ST7735_CYAN = 0x07ff;\n// const ST7735_MAGENTA = 0xf81f;\n// const ST7735_YELLOW = 0xffe0;\n// const ST7735_WHITE = 0xffff;\n\nconst ST7735_18bit: any = 0x06; // 18bit/pixel\nconst ST7735_16bit: any = 0x05; // 16bit/pixel\n\n// standard ascii 5x7 font\nconst font: any = [\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x3e,\n  0x5b,\n  0x4f,\n  0x5b,\n  0x3e,\n  0x3e,\n  0x6b,\n  0x4f,\n  0x6b,\n  0x3e,\n  0x1c,\n  0x3e,\n  0x7c,\n  0x3e,\n  0x1c,\n  0x18,\n  0x3c,\n  0x7e,\n  0x3c,\n  0x18,\n  0x1c,\n  0x57,\n  0x7d,\n  0x57,\n  0x1c,\n  0x1c,\n  0x5e,\n  0x7f,\n  0x5e,\n  0x1c,\n  0x00,\n  0x18,\n  0x3c,\n  0x18,\n  0x00,\n  0xff,\n  0xe7,\n  0xc3,\n  0xe7,\n  0xff,\n  0x00,\n  0x18,\n  0x24,\n  0x18,\n  0x00,\n  0xff,\n  0xe7,\n  0xdb,\n  0xe7,\n  0xff,\n  0x30,\n  0x48,\n  0x3a,\n  0x06,\n  0x0e,\n  0x26,\n  0x29,\n  0x79,\n  0x29,\n  0x26,\n  0x40,\n  0x7f,\n  0x05,\n  0x05,\n  0x07,\n  0x40,\n  0x7f,\n  0x05,\n  0x25,\n  0x3f,\n  0x5a,\n  0x3c,\n  0xe7,\n  0x3c,\n  0x5a,\n  0x7f,\n  0x3e,\n  0x1c,\n  0x1c,\n  0x08,\n  0x08,\n  0x1c,\n  0x1c,\n  0x3e,\n  0x7f,\n  0x14,\n  0x22,\n  0x7f,\n  0x22,\n  0x14,\n  0x5f,\n  0x5f,\n  0x00,\n  0x5f,\n  0x5f,\n  0x06,\n  0x09,\n  0x7f,\n  0x01,\n  0x7f,\n  0x00,\n  0x66,\n  0x89,\n  0x95,\n  0x6a,\n  0x60,\n  0x60,\n  0x60,\n  0x60,\n  0x60,\n  0x94,\n  0xa2,\n  0xff,\n  0xa2,\n  0x94,\n  0x08,\n  0x04,\n  0x7e,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x7e,\n  0x20,\n  0x10,\n  0x08,\n  0x08,\n  0x2a,\n  0x1c,\n  0x08,\n  0x08,\n  0x1c,\n  0x2a,\n  0x08,\n  0x08,\n  0x1e,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x0c,\n  0x1e,\n  0x0c,\n  0x1e,\n  0x0c,\n  0x30,\n  0x38,\n  0x3e,\n  0x38,\n  0x30,\n  0x06,\n  0x0e,\n  0x3e,\n  0x0e,\n  0x06,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x5f,\n  0x00,\n  0x00,\n  0x00,\n  0x07,\n  0x00,\n  0x07,\n  0x00,\n  0x14,\n  0x7f,\n  0x14,\n  0x7f,\n  0x14,\n  0x24,\n  0x2a,\n  0x7f,\n  0x2a,\n  0x12,\n  0x23,\n  0x13,\n  0x08,\n  0x64,\n  0x62,\n  0x36,\n  0x49,\n  0x56,\n  0x20,\n  0x50,\n  0x00,\n  0x08,\n  0x07,\n  0x03,\n  0x00,\n  0x00,\n  0x1c,\n  0x22,\n  0x41,\n  0x00,\n  0x00,\n  0x41,\n  0x22,\n  0x1c,\n  0x00,\n  0x2a,\n  0x1c,\n  0x7f,\n  0x1c,\n  0x2a,\n  0x08,\n  0x08,\n  0x3e,\n  0x08,\n  0x08,\n  0x00,\n  0x80,\n  0x70,\n  0x30,\n  0x00,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x00,\n  0x00,\n  0x60,\n  0x60,\n  0x00,\n  0x20,\n  0x10,\n  0x08,\n  0x04,\n  0x02,\n  0x3e,\n  0x51,\n  0x49,\n  0x45,\n  0x3e,\n  0x00,\n  0x42,\n  0x7f,\n  0x40,\n  0x00,\n  0x72,\n  0x49,\n  0x49,\n  0x49,\n  0x46,\n  0x21,\n  0x41,\n  0x49,\n  0x4d,\n  0x33,\n  0x18,\n  0x14,\n  0x12,\n  0x7f,\n  0x10,\n  0x27,\n  0x45,\n  0x45,\n  0x45,\n  0x39,\n  0x3c,\n  0x4a,\n  0x49,\n  0x49,\n  0x31,\n  0x41,\n  0x21,\n  0x11,\n  0x09,\n  0x07,\n  0x36,\n  0x49,\n  0x49,\n  0x49,\n  0x36,\n  0x46,\n  0x49,\n  0x49,\n  0x29,\n  0x1e,\n  0x00,\n  0x00,\n  0x14,\n  0x00,\n  0x00,\n  0x00,\n  0x40,\n  0x34,\n  0x00,\n  0x00,\n  0x00,\n  0x08,\n  0x14,\n  0x22,\n  0x41,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0x00,\n  0x41,\n  0x22,\n  0x14,\n  0x08,\n  0x02,\n  0x01,\n  0x59,\n  0x09,\n  0x06,\n  0x3e,\n  0x41,\n  0x5d,\n  0x59,\n  0x4e,\n  0x7c,\n  0x12,\n  0x11,\n  0x12,\n  0x7c,\n  0x7f,\n  0x49,\n  0x49,\n  0x49,\n  0x36,\n  0x3e,\n  0x41,\n  0x41,\n  0x41,\n  0x22,\n  0x7f,\n  0x41,\n  0x41,\n  0x41,\n  0x3e,\n  0x7f,\n  0x49,\n  0x49,\n  0x49,\n  0x41,\n  0x7f,\n  0x09,\n  0x09,\n  0x09,\n  0x01,\n  0x3e,\n  0x41,\n  0x41,\n  0x51,\n  0x73,\n  0x7f,\n  0x08,\n  0x08,\n  0x08,\n  0x7f,\n  0x00,\n  0x41,\n  0x7f,\n  0x41,\n  0x00,\n  0x20,\n  0x40,\n  0x41,\n  0x3f,\n  0x01,\n  0x7f,\n  0x08,\n  0x14,\n  0x22,\n  0x41,\n  0x7f,\n  0x40,\n  0x40,\n  0x40,\n  0x40,\n  0x7f,\n  0x02,\n  0x1c,\n  0x02,\n  0x7f,\n  0x7f,\n  0x04,\n  0x08,\n  0x10,\n  0x7f,\n  0x3e,\n  0x41,\n  0x41,\n  0x41,\n  0x3e,\n  0x7f,\n  0x09,\n  0x09,\n  0x09,\n  0x06,\n  0x3e,\n  0x41,\n  0x51,\n  0x21,\n  0x5e,\n  0x7f,\n  0x09,\n  0x19,\n  0x29,\n  0x46,\n  0x26,\n  0x49,\n  0x49,\n  0x49,\n  0x32,\n  0x03,\n  0x01,\n  0x7f,\n  0x01,\n  0x03,\n  0x3f,\n  0x40,\n  0x40,\n  0x40,\n  0x3f,\n  0x1f,\n  0x20,\n  0x40,\n  0x20,\n  0x1f,\n  0x3f,\n  0x40,\n  0x38,\n  0x40,\n  0x3f,\n  0x63,\n  0x14,\n  0x08,\n  0x14,\n  0x63,\n  0x03,\n  0x04,\n  0x78,\n  0x04,\n  0x03,\n  0x61,\n  0x59,\n  0x49,\n  0x4d,\n  0x43,\n  0x00,\n  0x7f,\n  0x41,\n  0x41,\n  0x41,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x00,\n  0x41,\n  0x41,\n  0x41,\n  0x7f,\n  0x04,\n  0x02,\n  0x01,\n  0x02,\n  0x04,\n  0x40,\n  0x40,\n  0x40,\n  0x40,\n  0x40,\n  0x00,\n  0x03,\n  0x07,\n  0x08,\n  0x00,\n  0x20,\n  0x54,\n  0x54,\n  0x78,\n  0x40,\n  0x7f,\n  0x28,\n  0x44,\n  0x44,\n  0x38,\n  0x38,\n  0x44,\n  0x44,\n  0x44,\n  0x28,\n  0x38,\n  0x44,\n  0x44,\n  0x28,\n  0x7f,\n  0x38,\n  0x54,\n  0x54,\n  0x54,\n  0x18,\n  0x00,\n  0x08,\n  0x7e,\n  0x09,\n  0x02,\n  0x18,\n  0xa4,\n  0xa4,\n  0x9c,\n  0x78,\n  0x7f,\n  0x08,\n  0x04,\n  0x04,\n  0x78,\n  0x00,\n  0x44,\n  0x7d,\n  0x40,\n  0x00,\n  0x20,\n  0x40,\n  0x40,\n  0x3d,\n  0x00,\n  0x7f,\n  0x10,\n  0x28,\n  0x44,\n  0x00,\n  0x00,\n  0x41,\n  0x7f,\n  0x40,\n  0x00,\n  0x7c,\n  0x04,\n  0x78,\n  0x04,\n  0x78,\n  0x7c,\n  0x08,\n  0x04,\n  0x04,\n  0x78,\n  0x38,\n  0x44,\n  0x44,\n  0x44,\n  0x38,\n  0xfc,\n  0x18,\n  0x24,\n  0x24,\n  0x18,\n  0x18,\n  0x24,\n  0x24,\n  0x18,\n  0xfc,\n  0x7c,\n  0x08,\n  0x04,\n  0x04,\n  0x08,\n  0x48,\n  0x54,\n  0x54,\n  0x54,\n  0x24,\n  0x04,\n  0x04,\n  0x3f,\n  0x44,\n  0x24,\n  0x3c,\n  0x40,\n  0x40,\n  0x20,\n  0x7c,\n  0x1c,\n  0x20,\n  0x40,\n  0x20,\n  0x1c,\n  0x3c,\n  0x40,\n  0x30,\n  0x40,\n  0x3c,\n  0x44,\n  0x28,\n  0x10,\n  0x28,\n  0x44,\n  0x4c,\n  0x90,\n  0x90,\n  0x90,\n  0x7c,\n  0x44,\n  0x64,\n  0x54,\n  0x4c,\n  0x44,\n  0x00,\n  0x08,\n  0x36,\n  0x41,\n  0x00,\n  0x00,\n  0x00,\n  0x77,\n  0x00,\n  0x00,\n  0x00,\n  0x41,\n  0x36,\n  0x08,\n  0x00,\n  0x02,\n  0x01,\n  0x02,\n  0x04,\n  0x02,\n  0x3c,\n  0x26,\n  0x23,\n  0x26,\n  0x3c,\n  0x1e,\n  0xa1,\n  0xa1,\n  0x61,\n  0x12,\n  0x3a,\n  0x40,\n  0x40,\n  0x20,\n  0x7a,\n  0x38,\n  0x54,\n  0x54,\n  0x55,\n  0x59,\n  0x21,\n  0x55,\n  0x55,\n  0x79,\n  0x41,\n  0x21,\n  0x54,\n  0x54,\n  0x78,\n  0x41,\n  0x21,\n  0x55,\n  0x54,\n  0x78,\n  0x40,\n  0x20,\n  0x54,\n  0x55,\n  0x79,\n  0x40,\n  0x0c,\n  0x1e,\n  0x52,\n  0x72,\n  0x12,\n  0x39,\n  0x55,\n  0x55,\n  0x55,\n  0x59,\n  0x39,\n  0x54,\n  0x54,\n  0x54,\n  0x59,\n  0x39,\n  0x55,\n  0x54,\n  0x54,\n  0x58,\n  0x00,\n  0x00,\n  0x45,\n  0x7c,\n  0x41,\n  0x00,\n  0x02,\n  0x45,\n  0x7d,\n  0x42,\n  0x00,\n  0x01,\n  0x45,\n  0x7c,\n  0x40,\n  0xf0,\n  0x29,\n  0x24,\n  0x29,\n  0xf0,\n  0xf0,\n  0x28,\n  0x25,\n  0x28,\n  0xf0,\n  0x7c,\n  0x54,\n  0x55,\n  0x45,\n  0x00,\n  0x20,\n  0x54,\n  0x54,\n  0x7c,\n  0x54,\n  0x7c,\n  0x0a,\n  0x09,\n  0x7f,\n  0x49,\n  0x32,\n  0x49,\n  0x49,\n  0x49,\n  0x32,\n  0x32,\n  0x48,\n  0x48,\n  0x48,\n  0x32,\n  0x32,\n  0x4a,\n  0x48,\n  0x48,\n  0x30,\n  0x3a,\n  0x41,\n  0x41,\n  0x21,\n  0x7a,\n  0x3a,\n  0x42,\n  0x40,\n  0x20,\n  0x78,\n  0x00,\n  0x9d,\n  0xa0,\n  0xa0,\n  0x7d,\n  0x39,\n  0x44,\n  0x44,\n  0x44,\n  0x39,\n  0x3d,\n  0x40,\n  0x40,\n  0x40,\n  0x3d,\n  0x3c,\n  0x24,\n  0xff,\n  0x24,\n  0x24,\n  0x48,\n  0x7e,\n  0x49,\n  0x43,\n  0x66,\n  0x2b,\n  0x2f,\n  0xfc,\n  0x2f,\n  0x2b,\n  0xff,\n  0x09,\n  0x29,\n  0xf6,\n  0x20,\n  0xc0,\n  0x88,\n  0x7e,\n  0x09,\n  0x03,\n  0x20,\n  0x54,\n  0x54,\n  0x79,\n  0x41,\n  0x00,\n  0x00,\n  0x44,\n  0x7d,\n  0x41,\n  0x30,\n  0x48,\n  0x48,\n  0x4a,\n  0x32,\n  0x38,\n  0x40,\n  0x40,\n  0x22,\n  0x7a,\n  0x00,\n  0x7a,\n  0x0a,\n  0x0a,\n  0x72,\n  0x7d,\n  0x0d,\n  0x19,\n  0x31,\n  0x7d,\n  0x26,\n  0x29,\n  0x29,\n  0x2f,\n  0x28,\n  0x26,\n  0x29,\n  0x29,\n  0x29,\n  0x26,\n  0x30,\n  0x48,\n  0x4d,\n  0x40,\n  0x20,\n  0x38,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x08,\n  0x38,\n  0x2f,\n  0x10,\n  0xc8,\n  0xac,\n  0xba,\n  0x2f,\n  0x10,\n  0x28,\n  0x34,\n  0xfa,\n  0x00,\n  0x00,\n  0x7b,\n  0x00,\n  0x00,\n  0x08,\n  0x14,\n  0x2a,\n  0x14,\n  0x22,\n  0x22,\n  0x14,\n  0x2a,\n  0x14,\n  0x08,\n  0xaa,\n  0x00,\n  0x55,\n  0x00,\n  0xaa,\n  0xaa,\n  0x55,\n  0xaa,\n  0x55,\n  0xaa,\n  0x00,\n  0x00,\n  0x00,\n  0xff,\n  0x00,\n  0x10,\n  0x10,\n  0x10,\n  0xff,\n  0x00,\n  0x14,\n  0x14,\n  0x14,\n  0xff,\n  0x00,\n  0x10,\n  0x10,\n  0xff,\n  0x00,\n  0xff,\n  0x10,\n  0x10,\n  0xf0,\n  0x10,\n  0xf0,\n  0x14,\n  0x14,\n  0x14,\n  0xfc,\n  0x00,\n  0x14,\n  0x14,\n  0xf7,\n  0x00,\n  0xff,\n  0x00,\n  0x00,\n  0xff,\n  0x00,\n  0xff,\n  0x14,\n  0x14,\n  0xf4,\n  0x04,\n  0xfc,\n  0x14,\n  0x14,\n  0x17,\n  0x10,\n  0x1f,\n  0x10,\n  0x10,\n  0x1f,\n  0x10,\n  0x1f,\n  0x14,\n  0x14,\n  0x14,\n  0x1f,\n  0x00,\n  0x10,\n  0x10,\n  0x10,\n  0xf0,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x1f,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x1f,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0xf0,\n  0x10,\n  0x00,\n  0x00,\n  0x00,\n  0xff,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0x10,\n  0xff,\n  0x10,\n  0x00,\n  0x00,\n  0x00,\n  0xff,\n  0x14,\n  0x00,\n  0x00,\n  0xff,\n  0x00,\n  0xff,\n  0x00,\n  0x00,\n  0x1f,\n  0x10,\n  0x17,\n  0x00,\n  0x00,\n  0xfc,\n  0x04,\n  0xf4,\n  0x14,\n  0x14,\n  0x17,\n  0x10,\n  0x17,\n  0x14,\n  0x14,\n  0xf4,\n  0x04,\n  0xf4,\n  0x00,\n  0x00,\n  0xff,\n  0x00,\n  0xf7,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0x14,\n  0xf7,\n  0x00,\n  0xf7,\n  0x14,\n  0x14,\n  0x14,\n  0x17,\n  0x14,\n  0x10,\n  0x10,\n  0x1f,\n  0x10,\n  0x1f,\n  0x14,\n  0x14,\n  0x14,\n  0xf4,\n  0x14,\n  0x10,\n  0x10,\n  0xf0,\n  0x10,\n  0xf0,\n  0x00,\n  0x00,\n  0x1f,\n  0x10,\n  0x1f,\n  0x00,\n  0x00,\n  0x00,\n  0x1f,\n  0x14,\n  0x00,\n  0x00,\n  0x00,\n  0xfc,\n  0x14,\n  0x00,\n  0x00,\n  0xf0,\n  0x10,\n  0xf0,\n  0x10,\n  0x10,\n  0xff,\n  0x10,\n  0xff,\n  0x14,\n  0x14,\n  0x14,\n  0xff,\n  0x14,\n  0x10,\n  0x10,\n  0x10,\n  0x1f,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0xf0,\n  0x10,\n  0xff,\n  0xff,\n  0xff,\n  0xff,\n  0xff,\n  0xf0,\n  0xf0,\n  0xf0,\n  0xf0,\n  0xf0,\n  0xff,\n  0xff,\n  0xff,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0xff,\n  0xff,\n  0x0f,\n  0x0f,\n  0x0f,\n  0x0f,\n  0x0f,\n  0x38,\n  0x44,\n  0x44,\n  0x38,\n  0x44,\n  0x7c,\n  0x2a,\n  0x2a,\n  0x3e,\n  0x14,\n  0x7e,\n  0x02,\n  0x02,\n  0x06,\n  0x06,\n  0x02,\n  0x7e,\n  0x02,\n  0x7e,\n  0x02,\n  0x63,\n  0x55,\n  0x49,\n  0x41,\n  0x63,\n  0x38,\n  0x44,\n  0x44,\n  0x3c,\n  0x04,\n  0x40,\n  0x7e,\n  0x20,\n  0x1e,\n  0x20,\n  0x06,\n  0x02,\n  0x7e,\n  0x02,\n  0x02,\n  0x99,\n  0xa5,\n  0xe7,\n  0xa5,\n  0x99,\n  0x1c,\n  0x2a,\n  0x49,\n  0x2a,\n  0x1c,\n  0x4c,\n  0x72,\n  0x01,\n  0x72,\n  0x4c,\n  0x30,\n  0x4a,\n  0x4d,\n  0x4d,\n  0x30,\n  0x30,\n  0x48,\n  0x78,\n  0x48,\n  0x30,\n  0xbc,\n  0x62,\n  0x5a,\n  0x46,\n  0x3d,\n  0x3e,\n  0x49,\n  0x49,\n  0x49,\n  0x00,\n  0x7e,\n  0x01,\n  0x01,\n  0x01,\n  0x7e,\n  0x2a,\n  0x2a,\n  0x2a,\n  0x2a,\n  0x2a,\n  0x44,\n  0x44,\n  0x5f,\n  0x44,\n  0x44,\n  0x40,\n  0x51,\n  0x4a,\n  0x44,\n  0x40,\n  0x40,\n  0x44,\n  0x4a,\n  0x51,\n  0x40,\n  0x00,\n  0x00,\n  0xff,\n  0x01,\n  0x03,\n  0xe0,\n  0x80,\n  0xff,\n  0x00,\n  0x00,\n  0x08,\n  0x08,\n  0x6b,\n  0x6b,\n  0x08,\n  0x36,\n  0x12,\n  0x36,\n  0x24,\n  0x36,\n  0x06,\n  0x0f,\n  0x09,\n  0x0f,\n  0x06,\n  0x00,\n  0x00,\n  0x18,\n  0x18,\n  0x00,\n  0x00,\n  0x00,\n  0x10,\n  0x10,\n  0x00,\n  0x30,\n  0x40,\n  0xff,\n  0x01,\n  0x01,\n  0x00,\n  0x1f,\n  0x01,\n  0x01,\n  0x1e,\n  0x00,\n  0x19,\n  0x1d,\n  0x17,\n  0x12,\n  0x00,\n  0x3c,\n  0x3c,\n  0x3c,\n  0x3c,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n  0x00,\n];\n"]}