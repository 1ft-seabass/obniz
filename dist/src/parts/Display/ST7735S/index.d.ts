import Obniz from "../../../obniz";
import ObnizPartsInterface from "../../../obniz/ObnizPartsInterface";
export interface ST7735SOptions {
}
declare class ST7735S implements ObnizPartsInterface {
    static info(): {
        name: string;
    };
    keys: string[];
    requiredKeys: string[];
    debugprint: any;
    obniz: Obniz;
    io_dc: any;
    params: any;
    io_res: any;
    io_cs: any;
    spi: any;
    width: any;
    height: any;
    rotation: any;
    x_offset: any;
    y_offset: any;
    writeBuffer: any;
    color: any;
    constructor();
    wired(obniz: Obniz): void;
    print_debug(v: any): void;
    _deadSleep(waitMsec: any): void;
    _reset(): void;
    writeCommand(cmd: any): void;
    writeData(data: any): void;
    write(cmd: any, data: any): void;
    asyncwait(): Promise<any>;
    _writeFlush(): void;
    _writeBuffer(data?: any): void;
    color16(r: any, g: any, b: any): number;
    complementaryColor16(color: any): number;
    reverseColor16(color: any): number;
    _initG(): void;
    init(): void;
    setDisplayOn(): void;
    setDisplayOff(): void;
    setDisplay(on: any): void;
    setInversionOn(): void;
    setInversionOff(): void;
    setInversion(inversion: any): void;
    setRotation(m: any): void;
    setAddrWindow(x0: any, y0: any, x1: any, y1: any): void;
    fillScreen(color: any): void;
    _color2pixels(w: any, h: any, color: any): any[];
    fillRect(x: any, y: any, w: any, h: any, color: any): void;
    drawRect(x: any, y: any, w: any, h: any, color: any): void;
    drawCircle(x0: any, y0: any, r: any, color: any): void;
    _drawCircleHelper(x0: any, y0: any, r: any, cornername: any, color: any): void;
    fillCircle(x0: any, y0: any, r: any, color: any): void;
    _fillCircleHelper(x0: any, y0: any, r: any, cornername: any, delta: any, color: any): void;
    drawRoundRect(x: any, y: any, w: any, h: any, r: any, color: any): void;
    fillRoundRect(x: any, y: any, w: any, h: any, r: any, color: any): void;
    drawTriangle(x0: any, y0: any, x1: any, y1: any, x2: any, y2: any, color: any): void;
    fillTriangle(x0: any, y0: any, x1: any, y1: any, x2: any, y2: any, color: any): void;
    drawVLine(x: any, y: any, h: any, color: any): void;
    drawHLine(x: any, y: any, w: any, color: any): void;
    drawLine(x0: any, y0: any, x1: any, y1: any, color: any): void;
    drawPixel(x: any, y: any, color: any): void;
    drawChar(x: any, y: any, ch: any, color: any, bg: any, size: any): void;
    drawChar2(x: any, y: any, ch: any, color: any, bg: any, size: any): void;
    rawBound16(x: any, y: any, width: any, height: any, pixels: any, flush?: any): void;
    drawString(x: any, y: any, str: any, color: any, bg: any, size: any, wrap: any): any[];
    drawContextBound(context: any, x0: any, y0: any, width: any, height: any, x1: any, y1: any, gray: any): void;
    drawContext(context: any, gray: any): void;
    draw(context: any, gray: any): void;
    rawBound(x: any, y: any, width: any, height: any, pixels: any): void;
    raw(pixels: any): void;
    _setPresetColor(): void;
}
export default ST7735S;
