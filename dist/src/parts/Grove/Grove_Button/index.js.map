{"version":3,"sources":["../src/parts/Grove/Grove_Button/index.ts"],"names":[],"mappings":";;;;;;;;;;;AAIA,MAAM,YAAY;IAkBhB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE/B,IAAI,CAAC,oBAAoB,GAAG,GAAG,EAAE;QACjC,CAAC,CAAC;IACJ,CAAC;IAtBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,cAAc;SACrB,CAAC;IACJ,CAAC;IAoBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAEjD,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;QAED,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC9B;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE1B,MAAM,IAAI,GAAQ,IAAI,CAAC;QACvB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAClC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACtB;YACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAEY,aAAa;;YACxB,MAAM,GAAG,GAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;YAClD,OAAO,GAAG,CAAC;QACb,CAAC;KAAA;IAEM,SAAS,CAAC,SAAc;QAC7B,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,IAAI,CAAC,oBAAoB,GAAG,CAAC,OAAY,EAAE,EAAE;gBAC3C,IAAI,SAAS,KAAK,OAAO,EAAE;oBACzB,IAAI,CAAC,oBAAoB,GAAG,GAAG,EAAE;oBACjC,CAAC,CAAC;oBACF,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,kBAAe,YAAY,CAAC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Grove_ButtonOptions { }\nclass Grove_Button implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_Button\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public onChangeForStateWait: any;\n  public io_signal: any;\n  public params: any;\n  public io_vcc: any;\n  public io_supply: any;\n  public isPressed: any;\n  public onchange: any;\n\n  constructor() {\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\n    this.requiredKeys = [\"signal\"];\n\n    this.onChangeForStateWait = () => {\n    };\n  }\n\n  public wired(obniz: Obniz) {\n    this.io_signal = obniz.getIO(this.params.signal);\n\n    if (obniz.isValidIO(this.params.vcc)) {\n      this.io_vcc = obniz.getIO(this.params.vcc);\n      this.io_vcc.output(true);\n    }\n\n    if (obniz.isValidIO(this.params.gnd)) {\n      this.io_supply = obniz.getIO(this.params.gnd);\n      this.io_supply.output(false);\n    }\n\n    this.io_signal.pull(\"5v\");\n\n    const self: any = this;\n    this.io_signal.input((value: any) => {\n      self.isPressed = value;\n      if (self.onchange) {\n        self.onchange(value);\n      }\n      self.onChangeForStateWait(value);\n    });\n  }\n\n  public async isPressedWait() {\n    const ret: any = await this.io_signal.inputWait();\n    return ret;\n  }\n\n  public stateWait(isPressed: any) {\n    return new Promise((resolve, reject) => {\n      this.onChangeForStateWait = (pressed: any) => {\n        if (isPressed === pressed) {\n          this.onChangeForStateWait = () => {\n          };\n          resolve();\n        }\n      };\n    });\n  }\n}\n\nexport default Grove_Button;\n"]}