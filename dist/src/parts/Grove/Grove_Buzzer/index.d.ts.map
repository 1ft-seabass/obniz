{"version":3,"sources":["../src/parts/Grove/Grove_Buzzer/index.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,gBAAgB,CAAC;AACnC,OAAO,mBAAmB,EAAE,EAAC,cAAc,EAAC,MAAM,oCAAoC,CAAC;AAEvF,MAAM,WAAW,mBAAmB;CAAI;AACxC,cAAM,YAAa,YAAW,mBAAmB;WAEjC,IAAI,IAAI,cAAc;IAM7B,IAAI,EAAE,MAAM,EAAE,CAAC;IACf,YAAY,EAAE,MAAM,EAAE,CAAC;IACvB,KAAK,EAAG,KAAK,CAAC;IACd,MAAM,EAAE,GAAG,CAAC;IACZ,GAAG,EAAE,GAAG,CAAC;gBAEJ,KAAK,EAAE,GAAG;IAKf,KAAK,CAAC,KAAK,EAAE,KAAK;IAOlB,IAAI,CAAC,IAAI,EAAE,GAAG;IAad,IAAI;CAGZ;AAED,eAAe,YAAY,CAAC","file":"index.d.ts","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface Grove_BuzzerOptions { }\nclass Grove_Buzzer implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Grove_Buzzer\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public params: any;\n  public pwm: any;\n\n  constructor(obniz: any) {\n    this.keys = [\"signal\", \"gnd\", \"vcc\"];\n    this.requiredKeys = [\"signal\"];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.pwm = obniz.getFreePwm();\n    this.pwm.start({io: this.params.signal});\n  }\n\n  public play(freq: any) {\n    if (typeof freq !== \"number\") {\n      throw new Error(\"freq must be a number\");\n    }\n    freq = Math.floor(freq);\n    if (freq > 0) {\n      this.pwm.freq(freq);\n      this.pwm.pulse((1 / freq / 2) * 1000);\n    } else {\n      this.pwm.pulse(0);\n    }\n  }\n\n  public stop() {\n    this.play(0);\n  }\n}\n\nexport default Grove_Buzzer;\n"]}