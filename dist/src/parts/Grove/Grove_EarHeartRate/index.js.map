{"version":3,"sources":["../src/parts/Grove/Grove_EarHeartRate/index.ts"],"names":[],"mappings":";;AAAA,MAAM,kBAAkB;IAgBtB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QAEnC,IAAI,CAAC,cAAc,GAAG;YACpB,GAAG,EAAE,KAAK;YACV,GAAG,EAAE,KAAK;YACV,MAAM,EAAE,QAAQ;SACjB,CAAC;QAEF,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;IAC7B,CAAC;IA1BM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,oBAAoB;SAC3B,CAAC;IACJ,CAAC;IAwBM,KAAK,CAAC,KAAU;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEM,KAAK,CAAC,QAAa;QACxB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;YAC7B,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;QAEH,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU,GAAG,CAAC,KAAU,EAAE,EAAE;YACnD,MAAM,KAAK,GAAQ,EAAE,CAAC;YACtB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACzC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;oBACxC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;iBACf;aACF;YACD,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;gBACrB,IAAI,OAAO,GAAQ,CAAC,CAAC;gBACrB,IAAI,QAAQ,GAAQ,CAAC,CAAC;gBACtB,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC;gBAC3D,QAAQ,GAAG,EAAE,GAAG,OAAO,CAAC;gBACxB,QAAQ,CAAC,QAAQ,CAAC,CAAC;aACpB;QACH,CAAC,CAAC;IACJ,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;YAClC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAS,EAAE,EAAE;gBACvB,OAAO,CAAC,IAAI,CAAC,CAAC;YAChB,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,kBAAe,kBAAkB,CAAC","file":"index.js","sourcesContent":["class Grove_EarHeartRate {\n\n  public static info() {\n    return {\n      name: \"Grove_EarHeartRate\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public displayIoNames: any;\n  public interval: any;\n  public duration: any;\n  public obniz: any;\n  public params: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"gnd\", \"signal\"];\n    this.requiredKeys = [\"vcc\", \"gnd\"];\n\n    this.displayIoNames = {\n      vcc: \"vcc\",\n      gnd: \"gnd\",\n      signal: \"signal\",\n    };\n\n    this.interval = 5;\n    this.duration = 2.5 * 1000;\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n  }\n\n  public start(callback: any) {\n    this.obniz.logicAnalyzer.start({\n      io: this.params.signal,\n      interval: this.interval,\n      duration: this.duration,\n    });\n\n    this.obniz.logicAnalyzer.onmeasured = (array: any) => {\n      const edges: any = [];\n      for (let i = 0; i < array.length - 1; i++) {\n        if (array[i] === 0 && array[i + 1] === 1) {\n          edges.push(i);\n        }\n      }\n      if (edges.length >= 2) {\n        let between: any = 0;\n        let pulseMin: any = 0;\n        between = ((edges[1] - edges[0]) * this.interval) / 1000.0;\n        pulseMin = 60 / between;\n        callback(pulseMin);\n      }\n    };\n  }\n\n  public getWait() {\n    return new Promise((resolve: any) => {\n      this.start((rate: any) => {\n        resolve(rate);\n      });\n    });\n  }\n}\n\nexport default Grove_EarHeartRate;\n"]}