{"version":3,"sources":["../src/parts/Light/LED/index.ts"],"names":[],"mappings":";;AAOA,MAAM,GAAG;IAgBP;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAjBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,KAAK;SACZ,CAAC;IACJ,CAAC;IAeM,KAAK,CAAC,KAAY;QACvB,SAAS,KAAK,CAAC,EAAO;YACpB,IAAI,EAAE,IAAI,OAAO,EAAE,KAAK,QAAQ,EAAE;gBAChC,IAAI,OAAO,EAAE,CAAC,MAAM,KAAK,UAAU,EAAE;oBACnC,OAAO,EAAE,CAAC;iBACX;aACF;YACD,OAAO,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACzB,CAAC;QAED,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,IAAI,CAAC,KAAM,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE;YAC9C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC7C,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC/B;QACD,IAAI,CAAC,aAAa,GAAG,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;IAClD,CAAC;IAEM,EAAE;QACP,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAEM,GAAG;QACR,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAEM,MAAM,CAAC,KAAU;QACtB,IAAI,KAAK,EAAE;YACT,IAAI,CAAC,EAAE,EAAE,CAAC;SACX;aAAM;YACL,IAAI,CAAC,GAAG,EAAE,CAAC;SACZ;IACH,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,KAAM,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC;IAEM,KAAK,CAAC,QAAa;QACxB,IAAI,CAAC,QAAQ,EAAE;YACb,QAAQ,GAAG,GAAG,CAAC;SAChB;QACD,MAAM,MAAM,GAAQ;YAClB;gBACE,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;oBACpB,YAAY;oBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;gBACnC,CAAC;aACF;YACD;gBACE,QAAQ,EAAE,QAAQ;gBAClB,KAAK,EAAE,CAAC,KAAU,EAAE,EAAE;oBACpB,YAAY;oBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM;gBACrC,CAAC;aACF;SACF,CAAC;QAEF,IAAI,CAAC,KAAM,CAAC,EAAG,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IAChE,CAAC;CACF;AAED,kBAAe,GAAG,CAAC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface LEDOptions {\n  anode: number;\n  cathode?: number;\n}\nclass LED implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"LED\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public io_anode: any;\n  public params: any;\n  public io_cathode: any;\n  public animationName: any;\n\n  constructor() {\n    this.keys = [\"anode\", \"cathode\"];\n    this.requiredKeys = [\"anode\"];\n  }\n\n  public wired(obniz: Obniz) {\n    function getIO(io: any) {\n      if (io && typeof io === \"object\") {\n        if (typeof io.output === \"function\") {\n          return io;\n        }\n      }\n      return obniz.getIO(io);\n    }\n\n    this.obniz = obniz;\n    this.io_anode = getIO(this.params.anode);\n    this.io_anode.output(false);\n    if (this.obniz!.isValidIO(this.params.cathode)) {\n      this.io_cathode = getIO(this.params.cathode);\n      this.io_cathode.output(false);\n    }\n    this.animationName = \"Led-\" + this.params.anode;\n  }\n\n  public on() {\n    this.endBlink();\n    this.io_anode.output(true);\n  }\n\n  public off() {\n    this.endBlink();\n    this.io_anode.output(false);\n  }\n\n  public output(value: any) {\n    if (value) {\n      this.on();\n    } else {\n      this.off();\n    }\n  }\n\n  public endBlink() {\n    this.obniz!.io!.animation(this.animationName, \"pause\");\n  }\n\n  public blink(interval: any) {\n    if (!interval) {\n      interval = 100;\n    }\n    const frames: any = [\n      {\n        duration: interval,\n        state: (index: any) => {\n          // index = 0\n          this.io_anode.output(true); // on\n        },\n      },\n      {\n        duration: interval,\n        state: (index: any) => {\n          // index = 0\n          this.io_anode.output(false); // off\n        },\n      },\n    ];\n\n    this.obniz!.io!.animation(this.animationName, \"loop\", frames);\n  }\n}\n\nexport default LED;\n"]}