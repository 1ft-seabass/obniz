{"version":3,"sources":["../src/parts/MovementSensor/Potentiometer/index.ts"],"names":[],"mappings":";;AAIA,MAAM,aAAa;IAiBjB;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QAE7C,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IApBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,eAAe;SACtB,CAAC;IACJ,CAAC;IAkBM,KAAK,CAAC,KAAY;QACvB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QAC/D,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAExC,MAAM,IAAI,GAAQ,IAAI,CAAC;QAEvB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YACjD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YACzC,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9B;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,kBAAe,aAAa,CAAC","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface PotentiometerOptions { }\nclass Potentiometer implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"Potentiometer\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public vcc_voltage: any;\n  public obniz!: Obniz;\n  public params: any;\n  public ad: any;\n  public position: any;\n  public onchange: any;\n\n  constructor() {\n    this.keys = [\"pin0\", \"pin1\", \"pin2\"];\n    this.requiredKeys = [\"pin0\", \"pin1\", \"pin2\"];\n\n    this.vcc_voltage = 5.0;\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz.setVccGnd(this.params.pin0, this.params.pin2, \"5v\");\n    this.ad = obniz.getAD(this.params.pin1);\n\n    const self: any = this;\n\n    obniz.getAD(this.params.pin0).start((value: any) => {\n      self.vcc_voltage = value;\n    });\n\n    this.ad.start((value: any) => {\n      self.position = value / self.vcc_voltage;\n      if (self.onchange) {\n        self.onchange(self.position);\n      }\n    });\n  }\n}\n\nexport default Potentiometer;\n"]}