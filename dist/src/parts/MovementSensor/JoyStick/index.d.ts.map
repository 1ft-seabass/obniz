{"version":3,"sources":["../src/parts/MovementSensor/JoyStick/index.ts"],"names":[],"mappings":"AAAA,cAAM,QAAQ;WAEE,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,YAAY,EAAE,GAAG,CAAC;IAClB,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,SAAS,EAAE,GAAG,CAAC;IACf,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,SAAS,EAAE,GAAG,CAAC;IACf,IAAI,EAAE,GAAG,CAAC;IACV,IAAI,EAAE,GAAG,CAAC;IACV,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,UAAU,EAAE,GAAG,CAAC;;IAUhB,KAAK,CAAC,KAAK,EAAE,GAAG;IAkCV,aAAa;IAKb,QAAQ;IAMR,QAAQ;CAKtB;AAED,eAAe,QAAQ,CAAC","file":"index.d.ts","sourcesContent":["class JoyStick {\n\n  public static info() {\n    return {\n      name: \"JoyStick\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public pins: any;\n  public pinname: any;\n  public shortName: any;\n  public obniz: any;\n  public params: any;\n  public io_sig_sw: any;\n  public ad_x: any;\n  public ad_y: any;\n  public positionX: any;\n  public positionY: any;\n  public onchangex: any;\n  public onchangey: any;\n  public isPressed: any;\n  public onchangesw: any;\n\n  constructor() {\n    this.keys = [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\", \"i2c\"];\n    this.requiredKeys = [\"sw\", \"y\", \"x\"];\n    this.pins = this.keys || [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\"];\n    this.pinname = {sw: \"sw12\"};\n    this.shortName = \"joyS\";\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    this.io_sig_sw = obniz.getIO(this.params.sw);\n    this.ad_x = obniz.getAD(this.params.x);\n    this.ad_y = obniz.getAD(this.params.y);\n\n    this.io_sig_sw.pull(\"5v\");\n\n    const self: any = this;\n    this.ad_x.start((value: any) => {\n      self.positionX = value / 5.0;\n      if (self.onchangex) {\n        self.onchangex(self.positionX * 2 - 1);\n      }\n    });\n\n    this.ad_y.start((value: any) => {\n      self.positionY = value / 5.0;\n      if (self.onchangey) {\n        self.onchangey(self.positionY * 2 - 1);\n      }\n    });\n\n    this.io_sig_sw.input((value: any) => {\n      self.isPressed = value === false;\n      if (self.onchangesw) {\n        self.onchangesw(value === false);\n      }\n    });\n  }\n\n  public async isPressedWait() {\n    const ret: any = await this.io_sig_sw.inputWait();\n    return ret === false;\n  }\n\n  public async getXWait() {\n    const value: any = await this.ad_x.getWait();\n    this.positionX = value / 5.0;\n    return this.positionX * 2 - 1;\n  }\n\n  public async getYWait() {\n    const value: any = await this.ad_y.getWait();\n    this.positionY = value / 5.0;\n    return this.positionY * 2 - 1;\n  }\n}\n\nexport default JoyStick;\n"]}