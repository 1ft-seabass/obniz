{"version":3,"sources":["../src/parts/MovementSensor/JoyStick/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface JoyStickOptions { }\nclass JoyStick implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"JoyStick\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public pins: any;\n  public pinname: any;\n  public shortName: any;\n  public obniz!: Obniz;\n  public params: any;\n  public io_sig_sw: any;\n  public ad_x: any;\n  public ad_y: any;\n  public positionX: any;\n  public positionY: any;\n  public onchangex: any;\n  public onchangey: any;\n  public isPressed: any;\n  public onchangesw: any;\n\n  constructor() {\n    this.keys = [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\", \"i2c\"];\n    this.requiredKeys = [\"sw\", \"y\", \"x\"];\n    this.pins = this.keys || [\"sw\", \"y\", \"x\", \"vcc\", \"gnd\"];\n    this.pinname = {sw: \"sw12\"};\n    this.shortName = \"joyS\";\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n\n    this.io_sig_sw = obniz.getIO(this.params.sw);\n    this.ad_x = obniz.getAD(this.params.x);\n    this.ad_y = obniz.getAD(this.params.y);\n\n    this.io_sig_sw.pull(\"5v\");\n\n    const self: any = this;\n    this.ad_x.start((value: any) => {\n      self.positionX = value / 5.0;\n      if (self.onchangex) {\n        self.onchangex(self.positionX * 2 - 1);\n      }\n    });\n\n    this.ad_y.start((value: any) => {\n      self.positionY = value / 5.0;\n      if (self.onchangey) {\n        self.onchangey(self.positionY * 2 - 1);\n      }\n    });\n\n    this.io_sig_sw.input((value: any) => {\n      self.isPressed = value === false;\n      if (self.onchangesw) {\n        self.onchangesw(value === false);\n      }\n    });\n  }\n\n  public async isPressedWait() {\n    const ret: any = await this.io_sig_sw.inputWait();\n    return ret === false;\n  }\n\n  public async getXWait() {\n    const value: any = await this.ad_x.getWait();\n    this.positionX = value / 5.0;\n    return this.positionX * 2 - 1;\n  }\n\n  public async getYWait() {\n    const value: any = await this.ad_y.getWait();\n    this.positionY = value / 5.0;\n    return this.positionY * 2 - 1;\n  }\n}\n\nexport default JoyStick;\n"]}