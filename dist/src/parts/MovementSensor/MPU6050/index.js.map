{"version":3,"sources":["../src/parts/MovementSensor/MPU6050/index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import Obniz from \"../../../obniz\";\nimport ObnizPartsInterface, {ObnizPartsInfo} from \"../../../obniz/ObnizPartsInterface\";\n\nexport interface MPU6050Options { }\nclass MPU6050 implements ObnizPartsInterface {\n\n  public static info(): ObnizPartsInfo {\n    return {\n      name: \"MPU6050\",\n    };\n  }\n\n  public keys: string[];\n  public requiredKeys: string[];\n  public obniz!: Obniz;\n  public params: any;\n  public _address: any;\n  public i2c: any;\n  public _accel_range: any;\n  public _gyro_range: any;\n\n  constructor() {\n    this.keys = [\n      \"gnd\",\n      \"vcc\",\n      \"sda\",\n      \"scl\",\n      \"i2c\",\n      \"address\",\n      \"accelerometer_range\",\n      \"gyroscope_range\",\n    ];\n    this.requiredKeys = [];\n  }\n\n  public wired(obniz: Obniz) {\n    this.obniz = obniz;\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    this.params.clock = 100000;\n    this.params.pull = \"3v\";\n    this.params.mode = \"master\";\n    this._address = this.params.address || 0x68;\n    this.i2c = obniz.getI2CWithConfig(this.params);\n    this.setConfig(\n      this.params.accelerometer_range || 2,\n      this.params.gyroscope_range || 250,\n    );\n  }\n\n  public setConfig(accelerometer_range: any, gyroscope_range: any) {\n    // accel range set (0x00:2g, 0x08:4g, 0x10:8g, 0x18:16g)\n    switch (accelerometer_range) {\n      case 2:\n        this.i2c.write(this._address, [0x1c, 0x00]);\n        break;\n      case 4:\n        this.i2c.write(this._address, [0x1c, 0x08]);\n        break;\n      case 8:\n        this.i2c.write(this._address, [0x1c, 0x10]);\n        break;\n      case 16:\n        this.i2c.write(this._address, [0x1c, 0x18]);\n        break;\n      default:\n        throw new Error(\"accel_range variable 2,4,8,16 setting\");\n    }\n    // gyro range & LPF set (0x00:250, 0x08:500, 0x10:1000, 0x18:2000[deg/s])\n    switch (gyroscope_range) {\n      case 250:\n        this.i2c.write(this._address, [0x1b, 0x00]);\n        break;\n      case 500:\n        this.i2c.write(this._address, [0x1b, 0x08]);\n        break;\n      case 1000:\n        this.i2c.write(this._address, [0x1b, 0x10]);\n        break;\n      case 2000:\n        this.i2c.write(this._address, [0x1b, 0x18]);\n        break;\n      default:\n        throw new Error(\"accel_range variable 250,500,1000,2000 setting\");\n    }\n    this._accel_range = accelerometer_range;\n    this._gyro_range = gyroscope_range;\n  }\n\n  public async getWait() {\n    this.i2c.write(this._address, [0x3b]); // request MPU6050 data\n    const raw_data_MPU6050: any = await this.i2c.readWait(this._address, 14); // read 14byte\n    const ac_scale: any = this._accel_range / 32768;\n    const gy_scale: any = this._gyro_range / 32768;\n    return {\n      accelerometer: {\n        x: this.char2short(raw_data_MPU6050[0], raw_data_MPU6050[1]) * ac_scale,\n        y: this.char2short(raw_data_MPU6050[2], raw_data_MPU6050[3]) * ac_scale,\n        z: this.char2short(raw_data_MPU6050[4], raw_data_MPU6050[5]) * ac_scale,\n      },\n      temp:\n        this.char2short(raw_data_MPU6050[6], raw_data_MPU6050[7]) / 333.87 + 21,\n      gyroscope: {\n        x: this.char2short(raw_data_MPU6050[8], raw_data_MPU6050[9]) * gy_scale,\n        y:\n          this.char2short(raw_data_MPU6050[10], raw_data_MPU6050[11]) *\n          gy_scale,\n        z:\n          this.char2short(raw_data_MPU6050[12], raw_data_MPU6050[13]) *\n          gy_scale,\n      },\n    };\n  }\n\n  public char2short(valueH: any, valueL: any) {\n    const buffer: any = new ArrayBuffer(2);\n    const dv: any = new DataView(buffer);\n    dv.setUint8(0, valueH);\n    dv.setUint8(1, valueL);\n    return dv.getInt16(0, false);\n  }\n}\n\nexport default MPU6050;\n"]}