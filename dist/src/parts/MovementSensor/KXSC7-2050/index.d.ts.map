{"version":3,"sources":["../src/parts/MovementSensor/KXSC7-2050/index.ts"],"names":[],"mappings":"AAAA,cAAM,UAAU;WAEA,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,YAAY,EAAE,GAAG,CAAC;IAClB,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC;IACV,IAAI,EAAE,GAAG,CAAC;IACV,IAAI,EAAE,GAAG,CAAC;IACV,OAAO,EAAE,GAAG,CAAC;IACb,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;IACf,SAAS,EAAE,GAAG,CAAC;;IAOT,KAAK,CAAC,KAAK,EAAE,GAAG;CAqC9B;AAED,eAAe,UAAU,CAAC","file":"index.d.ts","sourcesContent":["class KXSC7_2050 {\n\n  public static info() {\n    return {\n      name: \"KXSC7-2050\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public obniz: any;\n  public params: any;\n  public ad_x: any;\n  public ad_y: any;\n  public ad_z: any;\n  public gravity: any;\n  public onchangex: any;\n  public onchangey: any;\n  public onchangez: any;\n\n  constructor() {\n    this.keys = [\"x\", \"y\", \"z\", \"vcc\", \"gnd\"];\n    this.requiredKeys = [\"x\", \"y\", \"z\"];\n  }\n\n  public async wired(obniz: any) {\n    this.obniz = obniz;\n\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"3v\");\n    this.ad_x = obniz.getAD(this.params.x);\n    this.ad_y = obniz.getAD(this.params.y);\n    this.ad_z = obniz.getAD(this.params.z);\n\n    await obniz.wait(500);\n    const ad: any = obniz.getAD(this.params.vcc);\n    const pwrVoltage: any = await ad.getWait();\n    const horizontalZ: any = await this.ad_z.getWait();\n    const sensitivity: any = pwrVoltage / 5; // Set sensitivity (unit:V)\n    const offsetVoltage: any = horizontalZ - sensitivity; // Set offset voltage (Output voltage at 0g, unit:V)\n\n    const self: any = this;\n    this.ad_x.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangex) {\n        self.onchangex(self.gravity);\n      }\n    });\n\n    this.ad_y.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangey) {\n        self.onchangey(self.gravity);\n      }\n    });\n\n    this.ad_z.start((value: any) => {\n      self.gravity = (value - offsetVoltage) / sensitivity;\n      if (self.onchangez) {\n        self.onchangez(self.gravity);\n      }\n    });\n  }\n}\n\nexport default KXSC7_2050;\n"]}