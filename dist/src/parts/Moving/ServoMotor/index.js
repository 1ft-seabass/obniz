"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class ServoMotor {
    constructor() {
        this.keys = ["gnd", "vcc", "signal", "pwm"];
        this.requiredKeys = [];
        this.range = {
            min: 0.5,
            max: 2.4,
        };
    }
    static info() {
        return {
            name: "ServoMotor",
        };
    }
    wired(obniz) {
        this.obniz = obniz;
        this.obniz.setVccGnd(this.params.vcc, this.params.gnd, "5v");
        if (obniz.isValidIO(this.params.vcc)) {
            this.io_vcc = obniz.getIO(this.params.vcc);
        }
        if (this.params.pwm) {
            this.pwm = this.params.pwm;
        }
        else {
            this.pwm = obniz.getFreePwm();
            this.pwm_io_num = this.params.signal;
            this.pwm.start({ io: this.pwm_io_num });
        }
        this.pwm.freq(50);
    }
    // Module functions
    angle(ratio) {
        const max = this.range.max;
        const min = this.range.min;
        const val = ((max - min) * ratio) / 180.0 + min;
        this.pwm.pulse(val);
    }
    on() {
        if (this.io_vcc) {
            this.io_vcc.output(true);
        }
    }
    off() {
        if (this.io_vcc) {
            this.io_vcc.output(false);
        }
    }
}
exports.default = ServoMotor;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0cy9Nb3ZpbmcvU2Vydm9Nb3Rvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU0sVUFBVTtJQWlCZDtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM1QyxJQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQztRQUV2QixJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1gsR0FBRyxFQUFFLEdBQUc7WUFDUixHQUFHLEVBQUUsR0FBRztTQUNULENBQUM7SUFDSixDQUFDO0lBdkJNLE1BQU0sQ0FBQyxJQUFJO1FBQ2hCLE9BQU87WUFDTCxJQUFJLEVBQUUsWUFBWTtTQUNuQixDQUFDO0lBQ0osQ0FBQztJQXFCTSxLQUFLLENBQUMsS0FBVTtRQUNyQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUVuQixJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztRQUM3RCxJQUFJLEtBQUssQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUNwQyxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUM1QztRQUVELElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztTQUM1QjthQUFNO1lBQ0wsSUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDOUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNyQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsVUFBVSxFQUFDLENBQUMsQ0FBQztTQUN2QztRQUNELElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3BCLENBQUM7SUFFRCxtQkFBbUI7SUFFWixLQUFLLENBQUMsS0FBVTtRQUNyQixNQUFNLEdBQUcsR0FBUSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUNoQyxNQUFNLEdBQUcsR0FBUSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUNoQyxNQUFNLEdBQUcsR0FBUSxDQUFDLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQyxHQUFHLEtBQUssR0FBRyxHQUFHLENBQUM7UUFDckQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEIsQ0FBQztJQUVNLEVBQUU7UUFDUCxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDZixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMxQjtJQUNILENBQUM7SUFFTSxHQUFHO1FBQ1IsSUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFO1lBQ2YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7SUFDSCxDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxVQUFVLENBQUMiLCJmaWxlIjoic3JjL3BhcnRzL01vdmluZy9TZXJ2b01vdG9yL2luZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgU2Vydm9Nb3RvciB7XG5cbiAgcHVibGljIHN0YXRpYyBpbmZvKCkge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBcIlNlcnZvTW90b3JcIixcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIGtleXM6IGFueTtcbiAgcHVibGljIHJlcXVpcmVkS2V5czogYW55O1xuICBwdWJsaWMgcmFuZ2U6IGFueTtcbiAgcHVibGljIG9ibml6OiBhbnk7XG4gIHB1YmxpYyBwYXJhbXM6IGFueTtcbiAgcHVibGljIGlvX3ZjYzogYW55O1xuICBwdWJsaWMgcHdtOiBhbnk7XG4gIHB1YmxpYyBwd21faW9fbnVtOiBhbnk7XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5rZXlzID0gW1wiZ25kXCIsIFwidmNjXCIsIFwic2lnbmFsXCIsIFwicHdtXCJdO1xuICAgIHRoaXMucmVxdWlyZWRLZXlzID0gW107XG5cbiAgICB0aGlzLnJhbmdlID0ge1xuICAgICAgbWluOiAwLjUsXG4gICAgICBtYXg6IDIuNCxcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIHdpcmVkKG9ibml6OiBhbnkpIHtcbiAgICB0aGlzLm9ibml6ID0gb2JuaXo7XG5cbiAgICB0aGlzLm9ibml6LnNldFZjY0duZCh0aGlzLnBhcmFtcy52Y2MsIHRoaXMucGFyYW1zLmduZCwgXCI1dlwiKTtcbiAgICBpZiAob2JuaXouaXNWYWxpZElPKHRoaXMucGFyYW1zLnZjYykpIHtcbiAgICAgIHRoaXMuaW9fdmNjID0gb2JuaXouZ2V0SU8odGhpcy5wYXJhbXMudmNjKTtcbiAgICB9XG5cbiAgICBpZiAodGhpcy5wYXJhbXMucHdtKSB7XG4gICAgICB0aGlzLnB3bSA9IHRoaXMucGFyYW1zLnB3bTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5wd20gPSBvYm5pei5nZXRGcmVlUHdtKCk7XG4gICAgICB0aGlzLnB3bV9pb19udW0gPSB0aGlzLnBhcmFtcy5zaWduYWw7XG4gICAgICB0aGlzLnB3bS5zdGFydCh7aW86IHRoaXMucHdtX2lvX251bX0pO1xuICAgIH1cbiAgICB0aGlzLnB3bS5mcmVxKDUwKTtcbiAgfVxuXG4gIC8vIE1vZHVsZSBmdW5jdGlvbnNcblxuICBwdWJsaWMgYW5nbGUocmF0aW86IGFueSkge1xuICAgIGNvbnN0IG1heDogYW55ID0gdGhpcy5yYW5nZS5tYXg7XG4gICAgY29uc3QgbWluOiBhbnkgPSB0aGlzLnJhbmdlLm1pbjtcbiAgICBjb25zdCB2YWw6IGFueSA9ICgobWF4IC0gbWluKSAqIHJhdGlvKSAvIDE4MC4wICsgbWluO1xuICAgIHRoaXMucHdtLnB1bHNlKHZhbCk7XG4gIH1cblxuICBwdWJsaWMgb24oKSB7XG4gICAgaWYgKHRoaXMuaW9fdmNjKSB7XG4gICAgICB0aGlzLmlvX3ZjYy5vdXRwdXQodHJ1ZSk7XG4gICAgfVxuICB9XG5cbiAgcHVibGljIG9mZigpIHtcbiAgICBpZiAodGhpcy5pb192Y2MpIHtcbiAgICAgIHRoaXMuaW9fdmNjLm91dHB1dChmYWxzZSk7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlcnZvTW90b3I7XG4iXX0=
