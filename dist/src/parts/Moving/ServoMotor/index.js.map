{"version":3,"sources":["../src/parts/Moving/ServoMotor/index.ts"],"names":[],"mappings":";;AAAA,MAAM,UAAU;IAiBd;QACE,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAC5C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QAEvB,IAAI,CAAC,KAAK,GAAG;YACX,GAAG,EAAE,GAAG;YACR,GAAG,EAAE,GAAG;SACT,CAAC;IACJ,CAAC;IAvBM,MAAM,CAAC,IAAI;QAChB,OAAO;YACL,IAAI,EAAE,YAAY;SACnB,CAAC;IACJ,CAAC;IAqBM,KAAK,CAAC,KAAU;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QAEnB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;YACpC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC5C;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE;YACnB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;YAC9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YACrC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAC,EAAE,EAAE,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC;SACvC;QACD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACpB,CAAC;IAED,mBAAmB;IAEZ,KAAK,CAAC,KAAU;QACrB,MAAM,GAAG,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAChC,MAAM,GAAG,GAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QAChC,MAAM,GAAG,GAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;QACrD,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtB,CAAC;IAEM,EAAE;QACP,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC1B;IACH,CAAC;IAEM,GAAG;QACR,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SAC3B;IACH,CAAC;CACF;AAED,kBAAe,UAAU,CAAC","file":"index.js","sourcesContent":["class ServoMotor {\n\n  public static info() {\n    return {\n      name: \"ServoMotor\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public range: any;\n  public obniz: any;\n  public params: any;\n  public io_vcc: any;\n  public pwm: any;\n  public pwm_io_num: any;\n\n  constructor() {\n    this.keys = [\"gnd\", \"vcc\", \"signal\", \"pwm\"];\n    this.requiredKeys = [];\n\n    this.range = {\n      min: 0.5,\n      max: 2.4,\n    };\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n\n    this.obniz.setVccGnd(this.params.vcc, this.params.gnd, \"5v\");\n    if (obniz.isValidIO(this.params.vcc)) {\n      this.io_vcc = obniz.getIO(this.params.vcc);\n    }\n\n    if (this.params.pwm) {\n      this.pwm = this.params.pwm;\n    } else {\n      this.pwm = obniz.getFreePwm();\n      this.pwm_io_num = this.params.signal;\n      this.pwm.start({io: this.pwm_io_num});\n    }\n    this.pwm.freq(50);\n  }\n\n  // Module functions\n\n  public angle(ratio: any) {\n    const max: any = this.range.max;\n    const min: any = this.range.min;\n    const val: any = ((max - min) * ratio) / 180.0 + min;\n    this.pwm.pulse(val);\n  }\n\n  public on() {\n    if (this.io_vcc) {\n      this.io_vcc.output(true);\n    }\n  }\n\n  public off() {\n    if (this.io_vcc) {\n      this.io_vcc.output(false);\n    }\n  }\n}\n\nexport default ServoMotor;\n"]}