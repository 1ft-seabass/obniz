"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class Solenoid {
    constructor() {
        this.keys = ["gnd", "signal"];
        this.requiredKeys = ["signal"];
    }
    static info() {
        return {
            name: "Solenoid",
        };
    }
    wired(obniz) {
        this.obniz = obniz;
        if (obniz.isValidIO(this.params.gnd)) {
            this.io_gnd = obniz.getIO(this.params.gnd);
            this.io_gnd.output(false);
        }
        this.io_signal = obniz.getIO(this.params.signal);
        this.io_signal.output(false);
    }
    on() {
        this.io_signal.output(true);
    }
    off() {
        this.io_signal.output(false);
    }
    click(time_msec) {
        this.on();
        if (typeof time_msec !== "number") {
            time_msec = 100;
        }
        this.obniz.wait(time_msec);
        this.off();
    }
    doubleClick(time_msec) {
        if (typeof time_msec !== "number") {
            time_msec = 100;
        }
        this.click(time_msec);
        this.obniz.wait(time_msec);
        this.click(time_msec);
    }
}
exports.default = Solenoid;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9wYXJ0cy9Nb3ZpbmcvU29sZW5vaWQvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLFFBQVE7SUFlWjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxLQUFLLEVBQUUsUUFBUSxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFlBQVksR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFoQk0sTUFBTSxDQUFDLElBQUk7UUFDaEIsT0FBTztZQUNMLElBQUksRUFBRSxVQUFVO1NBQ2pCLENBQUM7SUFDSixDQUFDO0lBY00sS0FBSyxDQUFDLEtBQVU7UUFDckIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFFbkIsSUFBSSxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDcEMsSUFBSSxDQUFDLE1BQU0sR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDM0MsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7UUFFRCxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNqRCxJQUFJLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sRUFBRTtRQUNQLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7SUFFTSxHQUFHO1FBQ1IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVNLEtBQUssQ0FBQyxTQUFjO1FBQ3pCLElBQUksQ0FBQyxFQUFFLEVBQUUsQ0FBQztRQUNWLElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxFQUFFO1lBQ2pDLFNBQVMsR0FBRyxHQUFHLENBQUM7U0FDakI7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMzQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDYixDQUFDO0lBRU0sV0FBVyxDQUFDLFNBQWM7UUFDL0IsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRLEVBQUU7WUFDakMsU0FBUyxHQUFHLEdBQUcsQ0FBQztTQUNqQjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDM0IsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4QixDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxRQUFRLENBQUMiLCJmaWxlIjoic3JjL3BhcnRzL01vdmluZy9Tb2xlbm9pZC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFNvbGVub2lkIHtcblxuICBwdWJsaWMgc3RhdGljIGluZm8oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IFwiU29sZW5vaWRcIixcbiAgICB9O1xuICB9XG5cbiAgcHVibGljIGtleXM6IGFueTtcbiAgcHVibGljIHJlcXVpcmVkS2V5czogYW55O1xuICBwdWJsaWMgb2JuaXo6IGFueTtcbiAgcHVibGljIHBhcmFtczogYW55O1xuICBwdWJsaWMgaW9fZ25kOiBhbnk7XG4gIHB1YmxpYyBpb19zaWduYWw6IGFueTtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmtleXMgPSBbXCJnbmRcIiwgXCJzaWduYWxcIl07XG4gICAgdGhpcy5yZXF1aXJlZEtleXMgPSBbXCJzaWduYWxcIl07XG4gIH1cblxuICBwdWJsaWMgd2lyZWQob2JuaXo6IGFueSkge1xuICAgIHRoaXMub2JuaXogPSBvYm5pejtcblxuICAgIGlmIChvYm5pei5pc1ZhbGlkSU8odGhpcy5wYXJhbXMuZ25kKSkge1xuICAgICAgdGhpcy5pb19nbmQgPSBvYm5pei5nZXRJTyh0aGlzLnBhcmFtcy5nbmQpO1xuICAgICAgdGhpcy5pb19nbmQub3V0cHV0KGZhbHNlKTtcbiAgICB9XG5cbiAgICB0aGlzLmlvX3NpZ25hbCA9IG9ibml6LmdldElPKHRoaXMucGFyYW1zLnNpZ25hbCk7XG4gICAgdGhpcy5pb19zaWduYWwub3V0cHV0KGZhbHNlKTtcbiAgfVxuXG4gIHB1YmxpYyBvbigpIHtcbiAgICB0aGlzLmlvX3NpZ25hbC5vdXRwdXQodHJ1ZSk7XG4gIH1cblxuICBwdWJsaWMgb2ZmKCkge1xuICAgIHRoaXMuaW9fc2lnbmFsLm91dHB1dChmYWxzZSk7XG4gIH1cblxuICBwdWJsaWMgY2xpY2sodGltZV9tc2VjOiBhbnkpIHtcbiAgICB0aGlzLm9uKCk7XG4gICAgaWYgKHR5cGVvZiB0aW1lX21zZWMgIT09IFwibnVtYmVyXCIpIHtcbiAgICAgIHRpbWVfbXNlYyA9IDEwMDtcbiAgICB9XG4gICAgdGhpcy5vYm5pei53YWl0KHRpbWVfbXNlYyk7XG4gICAgdGhpcy5vZmYoKTtcbiAgfVxuXG4gIHB1YmxpYyBkb3VibGVDbGljayh0aW1lX21zZWM6IGFueSkge1xuICAgIGlmICh0eXBlb2YgdGltZV9tc2VjICE9PSBcIm51bWJlclwiKSB7XG4gICAgICB0aW1lX21zZWMgPSAxMDA7XG4gICAgfVxuICAgIHRoaXMuY2xpY2sodGltZV9tc2VjKTtcbiAgICB0aGlzLm9ibml6LndhaXQodGltZV9tc2VjKTtcbiAgICB0aGlzLmNsaWNrKHRpbWVfbXNlYyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgU29sZW5vaWQ7XG4iXX0=
