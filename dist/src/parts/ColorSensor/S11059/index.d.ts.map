{"version":3,"sources":["../src/parts/ColorSensor/S11059/index.ts"],"names":[],"mappings":"AAAA,cAAM,MAAM;WAEI,IAAI;;;IAMX,IAAI,EAAE,GAAG,CAAC;IACV,YAAY,EAAE,GAAG,CAAC;IAClB,OAAO,EAAE,GAAG,CAAC;IACb,OAAO,EAAE,GAAG,CAAC;IACb,KAAK,EAAE,GAAG,CAAC;IACX,MAAM,EAAE,GAAG,CAAC;IACZ,GAAG,EAAE,GAAG,CAAC;;IAaT,KAAK,CAAC,KAAK,EAAE,GAAG;IAYhB,IAAI,CAAC,IAAI,EAAE,GAAG,EAAE,OAAO,EAAE,GAAG;IAMtB,MAAM;CAUpB;AAED,eAAe,MAAM,CAAC","file":"index.d.ts","sourcesContent":["class S11059 {\n\n  public static info() {\n    return {\n      name: \"S11059\",\n    };\n  }\n\n  public keys: any;\n  public requiredKeys: any;\n  public address: any;\n  public regAdrs: any;\n  public obniz: any;\n  public params: any;\n  public i2c: any;\n\n  constructor() {\n    this.keys = [\"vcc\", \"sda\", \"scl\", \"i2c\", \"gnd\"];\n    this.requiredKeys = [];\n\n    this.address = 0x2a;\n    this.regAdrs = {};\n    this.regAdrs.ctrl = 0x00;\n    this.regAdrs.manualTiming = 0x01;\n    this.regAdrs.sensorRed = 0x03;\n  }\n\n  public wired(obniz: any) {\n    this.obniz = obniz;\n    obniz.setVccGnd(this.params.vcc, this.params.gnd, \"3v\");\n    this.obniz.wait(100);\n\n    this.params.clock = 100000;\n    this.params.pull = \"3v\";\n    this.params.mode = \"master\";\n    this.i2c = obniz.getI2CWithConfig(this.params);\n    this.obniz.wait(100);\n  }\n\n  public init(gain: any, intTime: any) {\n    this.i2c.write(this.address, [this.regAdrs.ctrl, 0x80]); // Reset\n    const val: any = (gain << 3) | intTime;\n    this.i2c.write(this.address, [this.regAdrs.ctrl, val]); // Set gain,interger time\n  }\n\n  public async getVal() {\n    this.i2c.write(this.address, [this.regAdrs.sensorRed]);\n    const ret: any = await this.i2c.readWait(this.address, 8);\n    const level: any = [0, 0, 0, 0];\n    level[0] = (ret[0] << 8) | ret[1];\n    level[1] = (ret[2] << 8) | ret[3];\n    level[2] = (ret[4] << 8) | ret[5];\n    level[3] = (ret[6] << 8) | ret[7];\n    return level;\n  }\n}\n\nexport default S11059;\n"]}