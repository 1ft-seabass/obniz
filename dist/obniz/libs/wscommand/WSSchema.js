"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tv4 = require("tv4");
tv4.defineError("UNIQUE_KEYS", 10001, "{uniqueKeys} are must be unique value.");
// @ts-ignore
tv4.defineKeyword("uniqueKeys", (data, value, schema) => {
    if (!Array.isArray(value)) {
        return null;
    }
    const targets = [];
    for (const key of value) {
        if (data[key] !== null && data[key] !== undefined) {
            targets.push(data[key]);
        }
    }
    const duplicated = targets.filter((x, i, self) => {
        return self.indexOf(x) !== self.lastIndexOf(x);
    });
    if (duplicated.length > 0) {
        return {
            code: tv4.errorCodes.UNIQUE_KEYS,
            message: { uniqueKeys: value.join(",") },
        };
    }
    return null;
});
const wsSchema = [];
const replaceContext = require("../webpackReplace/require-context");
// @ts-ignore
require.context = replaceContext;
// @ts-ignore
if (require.context && require.context.setBaseDir) {
    // @ts-ignore
    require.context.setBaseDir(__dirname);
}
const context = require.context("../../../json_schema", true, /\.yml$/);
for (const path of context.keys()) {
    const oneSchema = context(path);
    wsSchema.push(oneSchema);
}
wsSchema.map(tv4.addSchema);
exports.default = tv4;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vYm5pei9saWJzL3dzY29tbWFuZC9XU1NjaGVtYS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJCQUE0QjtBQUc1QixHQUFHLENBQUMsV0FBVyxDQUFDLGFBQWEsRUFBRSxLQUFLLEVBQUUsd0NBQXdDLENBQUMsQ0FBQztBQUVoRixhQUFhO0FBQ2IsR0FBRyxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxJQUFTLEVBQUUsS0FBVSxFQUFFLE1BQXNCLEVBQW1DLEVBQUU7SUFDakgsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7UUFDekIsT0FBTyxJQUFJLENBQUM7S0FDYjtJQUNELE1BQU0sT0FBTyxHQUFHLEVBQUUsQ0FBQztJQUNuQixLQUFLLE1BQU0sR0FBRyxJQUFJLEtBQUssRUFBRTtRQUN2QixJQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLFNBQVMsRUFBRTtZQUNqRCxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQ3pCO0tBQ0Y7SUFDRCxNQUFNLFVBQVUsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxJQUFJLEVBQUUsRUFBRTtRQUMvQyxPQUFPLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEtBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNqRCxDQUFDLENBQUMsQ0FBQztJQUNILElBQUksVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7UUFDekIsT0FBTztZQUNMLElBQUksRUFBRSxHQUFHLENBQUMsVUFBVSxDQUFDLFdBQVc7WUFDaEMsT0FBTyxFQUFFLEVBQUUsVUFBVSxFQUFFLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7U0FDekMsQ0FBQztLQUNIO0lBQ0QsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDLENBQUMsQ0FBQztBQUVILE1BQU0sUUFBUSxHQUFHLEVBQUUsQ0FBQztBQUNwQixvRUFBc0U7QUFFdEUsYUFBYTtBQUNiLE9BQU8sQ0FBQyxPQUFPLEdBQUcsY0FBYyxDQUFDO0FBRWpDLGFBQWE7QUFDYixJQUFJLE9BQU8sQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUU7SUFFakQsYUFBYTtJQUNiLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0NBQ3ZDO0FBQ0QsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRSxJQUFJLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFDeEUsS0FBSyxNQUFNLElBQUksSUFBSSxPQUFPLENBQUMsSUFBSSxFQUFFLEVBQUU7SUFDakMsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ2hDLFFBQVEsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7Q0FDMUI7QUFFRCxRQUFRLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUU1QixrQkFBZSxHQUFHLENBQUMiLCJmaWxlIjoib2JuaXovbGlicy93c2NvbW1hbmQvV1NTY2hlbWEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHY0ID0gcmVxdWlyZShcInR2NFwiKTtcbmltcG9ydCB7VmFsaWRhdGlvbkVycm9yfSBmcm9tIFwidHY0XCI7XG5cbnR2NC5kZWZpbmVFcnJvcihcIlVOSVFVRV9LRVlTXCIsIDEwMDAxLCBcInt1bmlxdWVLZXlzfSBhcmUgbXVzdCBiZSB1bmlxdWUgdmFsdWUuXCIpO1xuXG4vLyBAdHMtaWdub3JlXG50djQuZGVmaW5lS2V5d29yZChcInVuaXF1ZUtleXNcIiwgKGRhdGE6IGFueSwgdmFsdWU6IGFueSwgc2NoZW1hOiB0djQuSnNvblNjaGVtYSk6IHN0cmluZyB8IFZhbGlkYXRpb25FcnJvciB8IG51bGwgPT4ge1xuICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbiAgY29uc3QgdGFyZ2V0cyA9IFtdO1xuICBmb3IgKGNvbnN0IGtleSBvZiB2YWx1ZSkge1xuICAgIGlmIChkYXRhW2tleV0gIT09IG51bGwgJiYgZGF0YVtrZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHRhcmdldHMucHVzaChkYXRhW2tleV0pO1xuICAgIH1cbiAgfVxuICBjb25zdCBkdXBsaWNhdGVkID0gdGFyZ2V0cy5maWx0ZXIoKHgsIGksIHNlbGYpID0+IHtcbiAgICByZXR1cm4gc2VsZi5pbmRleE9mKHgpICE9PSBzZWxmLmxhc3RJbmRleE9mKHgpO1xuICB9KTtcbiAgaWYgKGR1cGxpY2F0ZWQubGVuZ3RoID4gMCkge1xuICAgIHJldHVybiB7XG4gICAgICBjb2RlOiB0djQuZXJyb3JDb2Rlcy5VTklRVUVfS0VZUyxcbiAgICAgIG1lc3NhZ2U6IHsgdW5pcXVlS2V5czogdmFsdWUuam9pbihcIixcIikgfSxcbiAgICB9O1xuICB9XG4gIHJldHVybiBudWxsO1xufSk7XG5cbmNvbnN0IHdzU2NoZW1hID0gW107XG5pbXBvcnQgcmVwbGFjZUNvbnRleHQgID0gcmVxdWlyZShcIi4uL3dlYnBhY2tSZXBsYWNlL3JlcXVpcmUtY29udGV4dFwiKTtcblxuLy8gQHRzLWlnbm9yZVxucmVxdWlyZS5jb250ZXh0ID0gcmVwbGFjZUNvbnRleHQ7XG5cbi8vIEB0cy1pZ25vcmVcbmlmIChyZXF1aXJlLmNvbnRleHQgJiYgcmVxdWlyZS5jb250ZXh0LnNldEJhc2VEaXIpIHtcblxuICAvLyBAdHMtaWdub3JlXG4gIHJlcXVpcmUuY29udGV4dC5zZXRCYXNlRGlyKF9fZGlybmFtZSk7XG59XG5jb25zdCBjb250ZXh0ID0gcmVxdWlyZS5jb250ZXh0KFwiLi4vLi4vLi4vanNvbl9zY2hlbWFcIiwgdHJ1ZSwgL1xcLnltbCQvKTtcbmZvciAoY29uc3QgcGF0aCBvZiBjb250ZXh0LmtleXMoKSkge1xuICBjb25zdCBvbmVTY2hlbWEgPSBjb250ZXh0KHBhdGgpO1xuICB3c1NjaGVtYS5wdXNoKG9uZVNjaGVtYSk7XG59XG5cbndzU2NoZW1hLm1hcCh0djQuYWRkU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgdHY0O1xuIl19
